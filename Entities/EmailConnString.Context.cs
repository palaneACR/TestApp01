//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication2.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PQRSV13Entities : DbContext
    {
        public PQRSV13Entities()
            : base("name=PQRSV13Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_MIPS_Email_Manager_Test> tbl_MIPS_Email_Manager_Test { get; set; }
    
        [DbFunction("PQRSV13Entities", "fnAbdomenBenchmarks")]
        public virtual IQueryable<fnAbdomenBenchmarks_Result> fnAbdomenBenchmarks(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnAbdomenBenchmarks_Result>("[PQRSV13Entities].[fnAbdomenBenchmarks](@Userid)", useridParameter);
        }
    
        [DbFunction("PQRSV13Entities", "fnGetBlockMeasures")]
        public virtual IQueryable<fnGetBlockMeasures_Result> fnGetBlockMeasures(string tin, Nullable<int> categoryId, Nullable<int> cmsYear)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnGetBlockMeasures_Result>("[PQRSV13Entities].[fnGetBlockMeasures](@Tin, @CategoryId, @CmsYear)", tinParameter, categoryIdParameter, cmsYearParameter);
        }
    
        [DbFunction("PQRSV13Entities", "fnMIPSExamDataKeyParameters")]
        public virtual IQueryable<fnMIPSExamDataKeyParameters_Result> fnMIPSExamDataKeyParameters(string physicianNPI, string examTIN, string patient_Id, string decryptPatient_Id, string measure_Num, string procedure_Code, Nullable<System.DateTime> exam_Date, Nullable<int> cMS_Submission_Year, string exam_Unique_ID, string criteria, string denom_Diag_Code, string numerator_Code)
        {
            var physicianNPIParameter = physicianNPI != null ?
                new ObjectParameter("PhysicianNPI", physicianNPI) :
                new ObjectParameter("PhysicianNPI", typeof(string));
    
            var examTINParameter = examTIN != null ?
                new ObjectParameter("ExamTIN", examTIN) :
                new ObjectParameter("ExamTIN", typeof(string));
    
            var patient_IdParameter = patient_Id != null ?
                new ObjectParameter("Patient_Id", patient_Id) :
                new ObjectParameter("Patient_Id", typeof(string));
    
            var decryptPatient_IdParameter = decryptPatient_Id != null ?
                new ObjectParameter("DecryptPatient_Id", decryptPatient_Id) :
                new ObjectParameter("DecryptPatient_Id", typeof(string));
    
            var measure_NumParameter = measure_Num != null ?
                new ObjectParameter("Measure_Num", measure_Num) :
                new ObjectParameter("Measure_Num", typeof(string));
    
            var procedure_CodeParameter = procedure_Code != null ?
                new ObjectParameter("Procedure_Code", procedure_Code) :
                new ObjectParameter("Procedure_Code", typeof(string));
    
            var exam_DateParameter = exam_Date.HasValue ?
                new ObjectParameter("Exam_Date", exam_Date) :
                new ObjectParameter("Exam_Date", typeof(System.DateTime));
    
            var cMS_Submission_YearParameter = cMS_Submission_Year.HasValue ?
                new ObjectParameter("CMS_Submission_Year", cMS_Submission_Year) :
                new ObjectParameter("CMS_Submission_Year", typeof(int));
    
            var exam_Unique_IDParameter = exam_Unique_ID != null ?
                new ObjectParameter("Exam_Unique_ID", exam_Unique_ID) :
                new ObjectParameter("Exam_Unique_ID", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var denom_Diag_CodeParameter = denom_Diag_Code != null ?
                new ObjectParameter("Denom_Diag_Code", denom_Diag_Code) :
                new ObjectParameter("Denom_Diag_Code", typeof(string));
    
            var numerator_CodeParameter = numerator_Code != null ?
                new ObjectParameter("Numerator_Code", numerator_Code) :
                new ObjectParameter("Numerator_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnMIPSExamDataKeyParameters_Result>("[PQRSV13Entities].[fnMIPSExamDataKeyParameters](@PhysicianNPI, @ExamTIN, @Patient_Id, @DecryptPatient_Id, @Measure_Num, @Procedure_Code, @Exam_Date, @CMS_Submission_Year, @Exam_Unique_ID, @Criteria, @Denom_Diag_Code, @Numerator_Code)", physicianNPIParameter, examTINParameter, patient_IdParameter, decryptPatient_IdParameter, measure_NumParameter, procedure_CodeParameter, exam_DateParameter, cMS_Submission_YearParameter, exam_Unique_IDParameter, criteriaParameter, denom_Diag_CodeParameter, numerator_CodeParameter);
        }
    
        [DbFunction("PQRSV13Entities", "Split")]
        public virtual IQueryable<Split_Result> Split(string inputString, string delimiter)
        {
            var inputStringParameter = inputString != null ?
                new ObjectParameter("InputString", inputString) :
                new ObjectParameter("InputString", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[PQRSV13Entities].[Split](@InputString, @Delimiter)", inputStringParameter, delimiterParameter);
        }
    
        [DbFunction("PQRSV13Entities", "Split_IgnoreParantheses")]
        public virtual IQueryable<Split_IgnoreParantheses_Result> Split_IgnoreParantheses(string inputString, string delimiter)
        {
            var inputStringParameter = inputString != null ?
                new ObjectParameter("InputString", inputString) :
                new ObjectParameter("InputString", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_IgnoreParantheses_Result>("[PQRSV13Entities].[Split_IgnoreParantheses](@InputString, @Delimiter)", inputStringParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<c_Result> c(string tIN, string nPI, Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<c_Result>("c", tINParameter, nPIParameter, cMSYearParameter, isExportParameter);
        }
    
        public virtual ObjectResult<string> ELMAH_GetErrorsXml(string application, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ELMAH_GetErrorsXml", applicationParameter, pageIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<string> ELMAH_GetErrorXml(string application, Nullable<System.Guid> errorId)
        {
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var errorIdParameter = errorId.HasValue ?
                new ObjectParameter("ErrorId", errorId) :
                new ObjectParameter("ErrorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ELMAH_GetErrorXml", applicationParameter, errorIdParameter);
        }
    
        public virtual int ELMAH_LogError(Nullable<System.Guid> errorId, string application, string host, string type, string source, string message, string user, string allXml, Nullable<int> statusCode, Nullable<System.DateTime> timeUtc)
        {
            var errorIdParameter = errorId.HasValue ?
                new ObjectParameter("ErrorId", errorId) :
                new ObjectParameter("ErrorId", typeof(System.Guid));
    
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var hostParameter = host != null ?
                new ObjectParameter("Host", host) :
                new ObjectParameter("Host", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var allXmlParameter = allXml != null ?
                new ObjectParameter("AllXml", allXml) :
                new ObjectParameter("AllXml", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var timeUtcParameter = timeUtc.HasValue ?
                new ObjectParameter("TimeUtc", timeUtc) :
                new ObjectParameter("TimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELMAH_LogError", errorIdParameter, applicationParameter, hostParameter, typeParameter, sourceParameter, messageParameter, userParameter, allXmlParameter, statusCodeParameter, timeUtcParameter);
        }
    
        public virtual ObjectResult<string> GetExcelSelectQuery(string sheetName)
        {
            var sheetNameParameter = sheetName != null ?
                new ObjectParameter("SheetName", sheetName) :
                new ObjectParameter("SheetName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetExcelSelectQuery", sheetNameParameter);
        }
    
        public virtual ObjectResult<GetFileDetails_Result> GetFileDetails(Nullable<int> fileId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFileDetails_Result>("GetFileDetails", fileIdParameter);
        }
    
        public virtual ObjectResult<GetImportErrorDetails_Result> GetImportErrorDetails(Nullable<int> importID, Nullable<int> importExamsId, Nullable<int> importExamId, Nullable<int> importExamsMeasureId, Nullable<int> importExamsMeasureExtID)
        {
            var importIDParameter = importID.HasValue ?
                new ObjectParameter("ImportID", importID) :
                new ObjectParameter("ImportID", typeof(int));
    
            var importExamsIdParameter = importExamsId.HasValue ?
                new ObjectParameter("ImportExamsId", importExamsId) :
                new ObjectParameter("ImportExamsId", typeof(int));
    
            var importExamIdParameter = importExamId.HasValue ?
                new ObjectParameter("ImportExamId", importExamId) :
                new ObjectParameter("ImportExamId", typeof(int));
    
            var importExamsMeasureIdParameter = importExamsMeasureId.HasValue ?
                new ObjectParameter("ImportExamsMeasureId", importExamsMeasureId) :
                new ObjectParameter("ImportExamsMeasureId", typeof(int));
    
            var importExamsMeasureExtIDParameter = importExamsMeasureExtID.HasValue ?
                new ObjectParameter("ImportExamsMeasureExtID", importExamsMeasureExtID) :
                new ObjectParameter("ImportExamsMeasureExtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetImportErrorDetails_Result>("GetImportErrorDetails", importIDParameter, importExamsIdParameter, importExamIdParameter, importExamsMeasureIdParameter, importExamsMeasureExtIDParameter);
        }
    
        public virtual int GetImportExamErrorDetails(Nullable<int> importExamId, Nullable<int> importExamsMeasureId, Nullable<int> importExamsMeasureExtID)
        {
            var importExamIdParameter = importExamId.HasValue ?
                new ObjectParameter("ImportExamId", importExamId) :
                new ObjectParameter("ImportExamId", typeof(int));
    
            var importExamsMeasureIdParameter = importExamsMeasureId.HasValue ?
                new ObjectParameter("ImportExamsMeasureId", importExamsMeasureId) :
                new ObjectParameter("ImportExamsMeasureId", typeof(int));
    
            var importExamsMeasureExtIDParameter = importExamsMeasureExtID.HasValue ?
                new ObjectParameter("ImportExamsMeasureExtID", importExamsMeasureExtID) :
                new ObjectParameter("ImportExamsMeasureExtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetImportExamErrorDetails", importExamIdParameter, importExamsMeasureIdParameter, importExamsMeasureExtIDParameter);
        }
    
        public virtual int GetImportExamMeasureErrorDetails(Nullable<int> importExamsMeasureId, Nullable<int> importExamsMeasureExtID)
        {
            var importExamsMeasureIdParameter = importExamsMeasureId.HasValue ?
                new ObjectParameter("ImportExamsMeasureId", importExamsMeasureId) :
                new ObjectParameter("ImportExamsMeasureId", typeof(int));
    
            var importExamsMeasureExtIDParameter = importExamsMeasureExtID.HasValue ?
                new ObjectParameter("ImportExamsMeasureExtID", importExamsMeasureExtID) :
                new ObjectParameter("ImportExamsMeasureExtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetImportExamMeasureErrorDetails", importExamsMeasureIdParameter, importExamsMeasureExtIDParameter);
        }
    
        public virtual int GetImportExamMeasureExtErrorDetails(Nullable<int> importExamsMeasureExtID)
        {
            var importExamsMeasureExtIDParameter = importExamsMeasureExtID.HasValue ?
                new ObjectParameter("ImportExamsMeasureExtID", importExamsMeasureExtID) :
                new ObjectParameter("ImportExamsMeasureExtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetImportExamMeasureExtErrorDetails", importExamsMeasureExtIDParameter);
        }
    
        public virtual int GetImportExamsErrorDetails(Nullable<int> importExamsId, Nullable<int> importExamId, Nullable<int> importExamsMeasureId, Nullable<int> importExamsMeasureExtID)
        {
            var importExamsIdParameter = importExamsId.HasValue ?
                new ObjectParameter("ImportExamsId", importExamsId) :
                new ObjectParameter("ImportExamsId", typeof(int));
    
            var importExamIdParameter = importExamId.HasValue ?
                new ObjectParameter("ImportExamId", importExamId) :
                new ObjectParameter("ImportExamId", typeof(int));
    
            var importExamsMeasureIdParameter = importExamsMeasureId.HasValue ?
                new ObjectParameter("ImportExamsMeasureId", importExamsMeasureId) :
                new ObjectParameter("ImportExamsMeasureId", typeof(int));
    
            var importExamsMeasureExtIDParameter = importExamsMeasureExtID.HasValue ?
                new ObjectParameter("ImportExamsMeasureExtID", importExamsMeasureExtID) :
                new ObjectParameter("ImportExamsMeasureExtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetImportExamsErrorDetails", importExamsIdParameter, importExamIdParameter, importExamsMeasureIdParameter, importExamsMeasureExtIDParameter);
        }
    
        public virtual int GetImportFileErrorDetails(Nullable<int> importID, Nullable<int> importExamsId, Nullable<int> importExamId, Nullable<int> importExamsMeasureId, Nullable<int> importExamsMeasureExtID)
        {
            var importIDParameter = importID.HasValue ?
                new ObjectParameter("ImportID", importID) :
                new ObjectParameter("ImportID", typeof(int));
    
            var importExamsIdParameter = importExamsId.HasValue ?
                new ObjectParameter("ImportExamsId", importExamsId) :
                new ObjectParameter("ImportExamsId", typeof(int));
    
            var importExamIdParameter = importExamId.HasValue ?
                new ObjectParameter("ImportExamId", importExamId) :
                new ObjectParameter("ImportExamId", typeof(int));
    
            var importExamsMeasureIdParameter = importExamsMeasureId.HasValue ?
                new ObjectParameter("ImportExamsMeasureId", importExamsMeasureId) :
                new ObjectParameter("ImportExamsMeasureId", typeof(int));
    
            var importExamsMeasureExtIDParameter = importExamsMeasureExtID.HasValue ?
                new ObjectParameter("ImportExamsMeasureExtID", importExamsMeasureExtID) :
                new ObjectParameter("ImportExamsMeasureExtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetImportFileErrorDetails", importIDParameter, importExamsIdParameter, importExamIdParameter, importExamsMeasureIdParameter, importExamsMeasureExtIDParameter);
        }
    
        public virtual ObjectResult<GetInvalidrecords_Result> GetInvalidrecords(Nullable<int> fileId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInvalidrecords_Result>("GetInvalidrecords", fileIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_Attestation_InsertTinsNpis(Nullable<int> fileId, Nullable<int> createdBy)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Attestation_InsertTinsNpis", fileIdParameter, createdByParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<string> sp_CreatePhysicianRecords(string physicianNPI)
        {
            var physicianNPIParameter = physicianNPI != null ?
                new ObjectParameter("PhysicianNPI", physicianNPI) :
                new ObjectParameter("PhysicianNPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_CreatePhysicianRecords", physicianNPIParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_getACRTINandTINNPISs_Result> sp_getACRTINandTINNPISs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getACRTINandTINNPISs_Result>("sp_getACRTINandTINNPISs");
        }
    
        public virtual ObjectResult<sp_getACRTINsWithOptInStatus_Result> sp_getACRTINsWithOptInStatus(Nullable<bool> isGpro, Nullable<int> cmsYear)
        {
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("IsGpro", isGpro) :
                new ObjectParameter("IsGpro", typeof(bool));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getACRTINsWithOptInStatus_Result>("sp_getACRTINsWithOptInStatus", isGproParameter, cmsYearParameter);
        }
    
        public virtual ObjectResult<string> sp_GetDecileSevenCappedMeasures(Nullable<int> cmsYear)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetDecileSevenCappedMeasures", cmsYearParameter);
        }
    
        public virtual ObjectResult<sp_getFacilityAdminNPIs_Result> sp_getFacilityAdminNPIs(string nrdr_Facility_id)
        {
            var nrdr_Facility_idParameter = nrdr_Facility_id != null ?
                new ObjectParameter("Nrdr_Facility_id", nrdr_Facility_id) :
                new ObjectParameter("Nrdr_Facility_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getFacilityAdminNPIs_Result>("sp_getFacilityAdminNPIs", nrdr_Facility_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_getFacilityIDbyUsername(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_getFacilityIDbyUsername", userNameParameter);
        }
    
        public virtual ObjectResult<sp_GetFacilityInvoices_Result> sp_GetFacilityInvoices(string userName, Nullable<int> cMSYear, string tIN, Nullable<bool> isGpro)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("IsGpro", isGpro) :
                new ObjectParameter("IsGpro", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetFacilityInvoices_Result>("sp_GetFacilityInvoices", userNameParameter, cMSYearParameter, tINParameter, isGproParameter);
        }
    
        public virtual ObjectResult<sp_getFacilityManagedPhysicianNPIs_Result> sp_getFacilityManagedPhysicianNPIs(string facilityUserName)
        {
            var facilityUserNameParameter = facilityUserName != null ?
                new ObjectParameter("facilityUserName", facilityUserName) :
                new ObjectParameter("facilityUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getFacilityManagedPhysicianNPIs_Result>("sp_getFacilityManagedPhysicianNPIs", facilityUserNameParameter);
        }
    
        public virtual ObjectResult<sp_getFacilityPhysicianNPIsTINs_Result> sp_getFacilityPhysicianNPIsTINs(string userName, string tIN)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getFacilityPhysicianNPIsTINs_Result>("sp_getFacilityPhysicianNPIsTINs", userNameParameter, tINParameter);
        }
    
        public virtual ObjectResult<sp_getFacilityPhysicianNPIsTINs_bkp_Result> sp_getFacilityPhysicianNPIsTINs_bkp(string userName, string tIN)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getFacilityPhysicianNPIsTINs_bkp_Result>("sp_getFacilityPhysicianNPIsTINs_bkp", userNameParameter, tINParameter);
        }
    
        public virtual ObjectResult<string> sp_getFacilityTIN(string facilityUserName)
        {
            var facilityUserNameParameter = facilityUserName != null ?
                new ObjectParameter("FacilityUserName", facilityUserName) :
                new ObjectParameter("FacilityUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getFacilityTIN", facilityUserNameParameter);
        }
    
        public virtual ObjectResult<sp_getFacilityTIN_GPRO_Result> sp_getFacilityTIN_GPRO(string facilityUserName)
        {
            var facilityUserNameParameter = facilityUserName != null ?
                new ObjectParameter("FacilityUserName", facilityUserName) :
                new ObjectParameter("FacilityUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getFacilityTIN_GPRO_Result>("sp_getFacilityTIN_GPRO", facilityUserNameParameter);
        }
    
        public virtual ObjectResult<sp_GetFacilityTinDocumentsStatus_Result> sp_GetFacilityTinDocumentsStatus(string userName, Nullable<int> cMSYear, Nullable<int> userRole)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("userRole", userRole) :
                new ObjectParameter("userRole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetFacilityTinDocumentsStatus_Result>("sp_GetFacilityTinDocumentsStatus", userNameParameter, cMSYearParameter, userRoleParameter);
        }
    
        public virtual ObjectResult<sp_getFacilityTINsWithOptInStatus_Result> sp_getFacilityTINsWithOptInStatus(string facilityUserName, Nullable<bool> isGpro, Nullable<int> cMSYear)
        {
            var facilityUserNameParameter = facilityUserName != null ?
                new ObjectParameter("FacilityUserName", facilityUserName) :
                new ObjectParameter("FacilityUserName", typeof(string));
    
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("IsGpro", isGpro) :
                new ObjectParameter("IsGpro", typeof(bool));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getFacilityTINsWithOptInStatus_Result>("sp_getFacilityTINsWithOptInStatus", facilityUserNameParameter, isGproParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<sp_getFacilityUnFinializedTins_Result> sp_getFacilityUnFinializedTins(string facilityusername, Nullable<int> cMSYear, Nullable<int> userRole)
        {
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getFacilityUnFinializedTins_Result>("sp_getFacilityUnFinializedTins", facilityusernameParameter, cMSYearParameter, userRoleParameter);
        }
    
        public virtual ObjectResult<sp_getFacilityUnFinializedTins_ACI_Result> sp_getFacilityUnFinializedTins_ACI(string facilityusername, Nullable<int> cMSYear, Nullable<int> userRole)
        {
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getFacilityUnFinializedTins_ACI_Result>("sp_getFacilityUnFinializedTins_ACI", facilityusernameParameter, cMSYearParameter, userRoleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetFacilityUnpaidInvoicesCount(string userName, Nullable<int> cMSYear, string tIN)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetFacilityUnpaidInvoicesCount", userNameParameter, cMSYearParameter, tINParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_getListOfFacilities(Nullable<int> nrdr_Facility_id)
        {
            var nrdr_Facility_idParameter = nrdr_Facility_id.HasValue ?
                new ObjectParameter("Nrdr_Facility_id", nrdr_Facility_id) :
                new ObjectParameter("Nrdr_Facility_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_getListOfFacilities", nrdr_Facility_idParameter);
        }
    
        public virtual ObjectResult<sp_getNPIsOfTin_Result> sp_getNPIsOfTin(string tIN)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getNPIsOfTin_Result>("sp_getNPIsOfTin", tINParameter);
        }
    
        public virtual ObjectResult<sp_getPhysianProfileForNPI_Result> sp_getPhysianProfileForNPI(string nPI)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getPhysianProfileForNPI_Result>("sp_getPhysianProfileForNPI", nPIParameter);
        }
    
        public virtual ObjectResult<string> sp_getPhysicianDocumentStatus(string nPI, string tIN, Nullable<int> cMSReportingYear)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSReportingYearParameter = cMSReportingYear.HasValue ?
                new ObjectParameter("CMSReportingYear", cMSReportingYear) :
                new ObjectParameter("CMSReportingYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getPhysicianDocumentStatus", nPIParameter, tINParameter, cMSReportingYearParameter);
        }
    
        public virtual ObjectResult<sp_GetPhysicianInvoices_Result> sp_GetPhysicianInvoices(string userName, string nPI, Nullable<int> cMSYear)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPhysicianInvoices_Result>("sp_GetPhysicianInvoices", userNameParameter, nPIParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<sp_getPhysicianNPIByFacilityID_Result> sp_getPhysicianNPIByFacilityID(Nullable<int> nrdrFacilityid)
        {
            var nrdrFacilityidParameter = nrdrFacilityid.HasValue ?
                new ObjectParameter("NrdrFacilityid", nrdrFacilityid) :
                new ObjectParameter("NrdrFacilityid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getPhysicianNPIByFacilityID_Result>("sp_getPhysicianNPIByFacilityID", nrdrFacilityidParameter);
        }
    
        public virtual ObjectResult<sp_getPhysicianProfile_Result> sp_getPhysicianProfile(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getPhysicianProfile_Result>("sp_getPhysicianProfile", userNameParameter);
        }
    
        public virtual int sp_getTIN_GPRO(string tIN)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getTIN_GPRO", tINParameter);
        }
    
        public virtual ObjectResult<sp_getTinNpiDetailsForOptInData_Result> sp_getTinNpiDetailsForOptInData(Nullable<int> cmsYear, string facilityusername, Nullable<int> isGpro)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("cmsYear", cmsYear) :
                new ObjectParameter("cmsYear", typeof(int));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("IsGpro", isGpro) :
                new ObjectParameter("IsGpro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getTinNpiDetailsForOptInData_Result>("sp_getTinNpiDetailsForOptInData", cmsYearParameter, facilityusernameParameter, isGproParameter);
        }
    
        public virtual ObjectResult<sp_getTINNPIsWithOptInStatus_Result> sp_getTINNPIsWithOptInStatus(Nullable<bool> isGpro, Nullable<int> userRole, string userName)
        {
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("IsGpro", isGpro) :
                new ObjectParameter("IsGpro", typeof(bool));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("userRole", userRole) :
                new ObjectParameter("userRole", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getTINNPIsWithOptInStatus_Result>("sp_getTINNPIsWithOptInStatus", isGproParameter, userRoleParameter, userNameParameter);
        }
    
        public virtual ObjectResult<sp_getTINNumbers_Result> sp_getTINNumbers(string nPI, string registryName)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var registryNameParameter = registryName != null ?
                new ObjectParameter("RegistryName", registryName) :
                new ObjectParameter("RegistryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getTINNumbers_Result>("sp_getTINNumbers", nPIParameter, registryNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_getUserIDWithNrdrUserID(string nrdrUserID)
        {
            var nrdrUserIDParameter = nrdrUserID != null ?
                new ObjectParameter("nrdrUserID", nrdrUserID) :
                new ObjectParameter("nrdrUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_getUserIDWithNrdrUserID", nrdrUserIDParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_isExistFacilitytin(string tin, string facilityusername)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("tin", tin) :
                new ObjectParameter("tin", typeof(string));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_isExistFacilitytin", tinParameter, facilityusernameParameter);
        }
    
        public virtual int sp_Physian_Tin_Count(string strPhysicianNPI, string tin, Nullable<int> intYear)
        {
            var strPhysicianNPIParameter = strPhysicianNPI != null ?
                new ObjectParameter("strPhysicianNPI", strPhysicianNPI) :
                new ObjectParameter("strPhysicianNPI", typeof(string));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Physian_Tin_Count", strPhysicianNPIParameter, tinParameter, intYearParameter);
        }
    
        public virtual ObjectResult<SP_PhysicianAttestionDetails_bak_Result> SP_PhysicianAttestionDetails_bak(Nullable<int> userid, string nPI, Nullable<int> cmsyear)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PhysicianAttestionDetails_bak_Result>("SP_PhysicianAttestionDetails_bak", useridParameter, nPIParameter, cmsyearParameter);
        }
    
        public virtual ObjectResult<SP_RecordEnteredPageGridDetails_Result> SP_RecordEnteredPageGridDetails(Nullable<int> cMSYear, string npi, Nullable<int> pageNo, Nullable<int> pageLimit, Nullable<bool> iSASC, string sortColumn, string sortDirection)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var npiParameter = npi != null ?
                new ObjectParameter("npi", npi) :
                new ObjectParameter("npi", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageLimitParameter = pageLimit.HasValue ?
                new ObjectParameter("PageLimit", pageLimit) :
                new ObjectParameter("PageLimit", typeof(int));
    
            var iSASCParameter = iSASC.HasValue ?
                new ObjectParameter("ISASC", iSASC) :
                new ObjectParameter("ISASC", typeof(bool));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RecordEnteredPageGridDetails_Result>("SP_RecordEnteredPageGridDetails", cMSYearParameter, npiParameter, pageNoParameter, pageLimitParameter, iSASCParameter, sortColumnParameter, sortDirectionParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_sendquarterlymails(Nullable<int> cmsYear)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("cmsYear", cmsYear) :
                new ObjectParameter("cmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendquarterlymails", cmsYearParameter);
        }
    
        public virtual ObjectResult<Sp_SingleNPITINFiles_Result> Sp_SingleNPITINFiles(string fileName)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SingleNPITINFiles_Result>("Sp_SingleNPITINFiles", fileNameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SP_Validate_PreProcessed_Data()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Validate_PreProcessed_Data");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_validateTIN(string nPI, string tIN)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_validateTIN", nPIParameter, tINParameter);
        }
    
        public virtual int SpacimeasuresInsertbyselectionId(string tin, string npi, Nullable<int> cMSYear, string facilityUsername)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var facilityUsernameParameter = facilityUsername != null ?
                new ObjectParameter("FacilityUsername", facilityUsername) :
                new ObjectParameter("FacilityUsername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpacimeasuresInsertbyselectionId", tinParameter, npiParameter, cMSYearParameter, facilityUsernameParameter);
        }
    
        public virtual int spAddFacilityUserNPIsFromNRDR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddFacilityUserNPIsFromNRDR");
        }
    
        public virtual int spAddUserFacilityTIN_forFacility()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddUserFacilityTIN_forFacility");
        }
    
        public virtual ObjectResult<spALLTINNPIRelatedMeasureDataForFullYear_Result> spALLTINNPIRelatedMeasureDataForFullYear(string current_User, Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var current_UserParameter = current_User != null ?
                new ObjectParameter("Current_User", current_User) :
                new ObjectParameter("Current_User", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spALLTINNPIRelatedMeasureDataForFullYear_Result>("spALLTINNPIRelatedMeasureDataForFullYear", current_UserParameter, cMSYearParameter, isExportParameter);
        }
    
        public virtual ObjectResult<spALLTINNPIRelatedMeasureDataForFullYear_Physician_Result> spALLTINNPIRelatedMeasureDataForFullYear_Physician(string nPI, Nullable<bool> iS_GPRO, Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var iS_GPROParameter = iS_GPRO.HasValue ?
                new ObjectParameter("IS_GPRO", iS_GPRO) :
                new ObjectParameter("IS_GPRO", typeof(bool));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spALLTINNPIRelatedMeasureDataForFullYear_Physician_Result>("spALLTINNPIRelatedMeasureDataForFullYear_Physician", nPIParameter, iS_GPROParameter, cMSYearParameter, isExportParameter);
        }
    
        public virtual ObjectResult<spAllTinRelatedMeasureDataForFullYear_Result> spAllTinRelatedMeasureDataForFullYear(string current_User, Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var current_UserParameter = current_User != null ?
                new ObjectParameter("Current_User", current_User) :
                new ObjectParameter("Current_User", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAllTinRelatedMeasureDataForFullYear_Result>("spAllTinRelatedMeasureDataForFullYear", current_UserParameter, cMSYearParameter, isExportParameter);
        }
    
        public virtual ObjectResult<SPAttestation_FacilityDetails_Result> SPAttestation_FacilityDetails(Nullable<int> userId, Nullable<int> cmsYear, Nullable<bool> iSEmailAddrRequire)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var iSEmailAddrRequireParameter = iSEmailAddrRequire.HasValue ?
                new ObjectParameter("ISEmailAddrRequire", iSEmailAddrRequire) :
                new ObjectParameter("ISEmailAddrRequire", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPAttestation_FacilityDetails_Result>("SPAttestation_FacilityDetails", userIdParameter, cmsYearParameter, iSEmailAddrRequireParameter);
        }
    
        public virtual int SPAttestation_InsertFacilityData(Nullable<int> userId, string emailAddress, Nullable<int> cmsYear)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPAttestation_InsertFacilityData", userIdParameter, emailAddressParameter, cmsYearParameter);
        }
    
        public virtual int SPAttestation_InsertPhysicianData(Nullable<int> userid, string nPI, Nullable<int> cmsyear, string email)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPAttestation_InsertPhysicianData", useridParameter, nPIParameter, cmsyearParameter, emailParameter);
        }
    
        public virtual int SPAttestation_InsertTinsNpisofFile(Nullable<int> fileId, Nullable<int> userId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPAttestation_InsertTinsNpisofFile", fileIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SPAttestation_PhysicianDetails_Result> SPAttestation_PhysicianDetails(Nullable<int> userid, string nPI, Nullable<int> cmsyear)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPAttestation_PhysicianDetails_Result>("SPAttestation_PhysicianDetails", useridParameter, nPIParameter, cmsyearParameter);
        }
    
        public virtual int SPAttestationDelete_UploadFiles(Nullable<int> fileid)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("Fileid", fileid) :
                new ObjectParameter("Fileid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPAttestationDelete_UploadFiles", fileidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpBackend_GPRO_IAMeasures(Nullable<int> cMSYear, string userName)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpBackend_GPRO_IAMeasures", cMSYearParameter, userNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpBackend_GPROTIN_IA_Measures(Nullable<int> cMSYear, Nullable<int> userID)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpBackend_GPROTIN_IA_Measures", cMSYearParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpBackend_GPROTIN_Measures(Nullable<int> cMSYear, Nullable<int> userID)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpBackend_GPROTIN_Measures", cMSYearParameter, userIDParameter);
        }
    
        public virtual int SpBackend_GPROTIN_Measures_Finalize(Nullable<int> cMSYear, Nullable<bool> isFinalize, Nullable<int> userID, string finalizeEmailAddress)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isFinalizeParameter = isFinalize.HasValue ?
                new ObjectParameter("isFinalize", isFinalize) :
                new ObjectParameter("isFinalize", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var finalizeEmailAddressParameter = finalizeEmailAddress != null ?
                new ObjectParameter("FinalizeEmailAddress", finalizeEmailAddress) :
                new ObjectParameter("FinalizeEmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpBackend_GPROTIN_Measures_Finalize", cMSYearParameter, isFinalizeParameter, userIDParameter, finalizeEmailAddressParameter);
        }
    
        public virtual int SpBackend_GPROTIN_Measures_IA_Finalize(Nullable<int> cMSYear, Nullable<bool> isFinalize, Nullable<int> userID, string finalizeEmailAddress)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isFinalizeParameter = isFinalize.HasValue ?
                new ObjectParameter("isFinalize", isFinalize) :
                new ObjectParameter("isFinalize", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var finalizeEmailAddressParameter = finalizeEmailAddress != null ?
                new ObjectParameter("FinalizeEmailAddress", finalizeEmailAddress) :
                new ObjectParameter("FinalizeEmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpBackend_GPROTIN_Measures_IA_Finalize", cMSYearParameter, isFinalizeParameter, userIDParameter, finalizeEmailAddressParameter);
        }
    
        public virtual int spBackend_IA_ACI_Tins_Insert_tbl_Tin_Gpro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBackend_IA_ACI_Tins_Insert_tbl_Tin_Gpro");
        }
    
        public virtual ObjectResult<Nullable<int>> SpBackend_NonGPRO_IAMeasures(Nullable<int> cMSYear, string userName)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpBackend_NonGPRO_IAMeasures", cMSYearParameter, userNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpBackend_NONGPROTIN_NPI_IA_Measures(Nullable<int> cMSYear, Nullable<int> userID)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpBackend_NONGPROTIN_NPI_IA_Measures", cMSYearParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpBackend_NONGPROTIN_NPI_Measures(Nullable<int> cMSYear, Nullable<int> userID)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpBackend_NONGPROTIN_NPI_Measures", cMSYearParameter, userIDParameter);
        }
    
        public virtual int SpBackend_NONGPROTIN_NPI_Measures_Finalize(Nullable<int> cMSYear, Nullable<bool> isFinalize, Nullable<int> userID, string finalizeEmailAddress)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isFinalizeParameter = isFinalize.HasValue ?
                new ObjectParameter("isFinalize", isFinalize) :
                new ObjectParameter("isFinalize", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var finalizeEmailAddressParameter = finalizeEmailAddress != null ?
                new ObjectParameter("FinalizeEmailAddress", finalizeEmailAddress) :
                new ObjectParameter("FinalizeEmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpBackend_NONGPROTIN_NPI_Measures_Finalize", cMSYearParameter, isFinalizeParameter, userIDParameter, finalizeEmailAddressParameter);
        }
    
        public virtual int SpBackend_NONGPROTIN_NPI_Measures_IA_Finalize(Nullable<int> cMSYear, Nullable<bool> isFinalize, Nullable<int> userID, string finalizeEmailAddress)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isFinalizeParameter = isFinalize.HasValue ?
                new ObjectParameter("isFinalize", isFinalize) :
                new ObjectParameter("isFinalize", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var finalizeEmailAddressParameter = finalizeEmailAddress != null ?
                new ObjectParameter("FinalizeEmailAddress", finalizeEmailAddress) :
                new ObjectParameter("FinalizeEmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpBackend_NONGPROTIN_NPI_Measures_IA_Finalize", cMSYearParameter, isFinalizeParameter, userIDParameter, finalizeEmailAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpBackend_TIN_IAMeasures(Nullable<int> cMSYear, string userName)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpBackend_TIN_IAMeasures", cMSYearParameter, userNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpBackend_TINNPI_IAMeasures(Nullable<int> cMSYear, string userName)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpBackend_TINNPI_IAMeasures", cMSYearParameter, userNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpBackend_TINNPI_IAMeasures_UNSELECTED(Nullable<int> cmsYear)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpBackend_TINNPI_IAMeasures_UNSELECTED", cmsYearParameter);
        }
    
        public virtual int SPBackendHandling_tblFileAccessFacilityList(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPBackendHandling_tblFileAccessFacilityList", startDateParameter, endDateParameter);
        }
    
        public virtual int spBackupCompatability_Fileupload(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBackupCompatability_Fileupload", yearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SPCheck_NPI_Exists(string nPI, ObjectParameter statusCode)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SPCheck_NPI_Exists", nPIParameter, statusCode);
        }
    
        public virtual ObjectResult<SpCI_App_GetMeasureData_Result> SpCI_App_GetMeasureData(Nullable<int> pageNo, Nullable<int> pageLimit)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageLimitParameter = pageLimit.HasValue ?
                new ObjectParameter("PageLimit", pageLimit) :
                new ObjectParameter("PageLimit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCI_App_GetMeasureData_Result>("SpCI_App_GetMeasureData", pageNoParameter, pageLimitParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpCI_App_MeasureDataCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCI_App_MeasureDataCount");
        }
    
        public virtual int SPCI_AppInsertMeasureData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_AppInsertMeasureData");
        }
    
        public virtual int SPCI_BatchPerformanceStatusUpdate(Nullable<bool> isGpro, Nullable<bool> isBatchCalculation, string strCurTIN, string strCurNPI, Nullable<int> intCurActiveYear, string strMeasure_num, ObjectParameter batch_MaxFileId)
        {
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("IsGpro", isGpro) :
                new ObjectParameter("IsGpro", typeof(bool));
    
            var isBatchCalculationParameter = isBatchCalculation.HasValue ?
                new ObjectParameter("IsBatchCalculation", isBatchCalculation) :
                new ObjectParameter("IsBatchCalculation", typeof(bool));
    
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var strCurNPIParameter = strCurNPI != null ?
                new ObjectParameter("strCurNPI", strCurNPI) :
                new ObjectParameter("strCurNPI", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strMeasure_numParameter = strMeasure_num != null ?
                new ObjectParameter("strMeasure_num", strMeasure_num) :
                new ObjectParameter("strMeasure_num", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BatchPerformanceStatusUpdate", isGproParameter, isBatchCalculationParameter, strCurTINParameter, strCurNPIParameter, intCurActiveYearParameter, strMeasure_numParameter, batch_MaxFileId);
        }
    
        public virtual ObjectResult<string> SPCI_BlockedMeasureList(Nullable<int> cmsYear, string tin, Nullable<int> categoryId, Nullable<bool> isGpro)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("IsGpro", isGpro) :
                new ObjectParameter("IsGpro", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPCI_BlockedMeasureList", cmsYearParameter, tinParameter, categoryIdParameter, isGproParameter);
        }
    
        public virtual int SPCI_BulkUpload_ExcelMeasureData_Gpro_IA(Nullable<int> cmsyear, Nullable<int> fileId, string createdby, Nullable<System.DateTime> createdDate, Nullable<int> userRole)
        {
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(int));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_ExcelMeasureData_Gpro_IA", cmsyearParameter, fileIdParameter, createdbyParameter, createdDateParameter, userRoleParameter);
        }
    
        public virtual int SPCI_BulkUpload_ExcelMeasureData_Gpro_QM(Nullable<int> cmsyear, Nullable<int> fileId, string createdby, Nullable<System.DateTime> createdDate)
        {
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(int));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_ExcelMeasureData_Gpro_QM", cmsyearParameter, fileIdParameter, createdbyParameter, createdDateParameter);
        }
    
        public virtual int SPCI_BulkUpload_ExcelMeasureData_NonGpro_IA(Nullable<int> cmsyear, Nullable<int> fileId, string createdby, Nullable<System.DateTime> createdDate, Nullable<int> userRole)
        {
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(int));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_ExcelMeasureData_NonGpro_IA", cmsyearParameter, fileIdParameter, createdbyParameter, createdDateParameter, userRoleParameter);
        }
    
        public virtual int SPCI_BulkUpload_ExcelMeasureData_NonGpro_QM(Nullable<int> cmsyear, Nullable<int> fileId, string createdby, Nullable<System.DateTime> createdDate)
        {
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(int));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_ExcelMeasureData_NonGpro_QM", cmsyearParameter, fileIdParameter, createdbyParameter, createdDateParameter);
        }
    
        public virtual ObjectResult<SPCI_BulkUpload_FileErrorDetails_Result> SPCI_BulkUpload_FileErrorDetails(Nullable<int> cMSYear, Nullable<int> fileId, Nullable<int> userId, Nullable<int> userRole)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_BulkUpload_FileErrorDetails_Result>("SPCI_BulkUpload_FileErrorDetails", cMSYearParameter, fileIdParameter, userIdParameter, userRoleParameter);
        }
    
        public virtual ObjectResult<SPCI_BulkUpload_FileProcess_Details_Result> SPCI_BulkUpload_FileProcess_Details(string userId, Nullable<int> cmsYear)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_BulkUpload_FileProcess_Details_Result>("SPCI_BulkUpload_FileProcess_Details", userIdParameter, cmsYearParameter);
        }
    
        public virtual int SPCI_BulkUpload_FilesProcess(Nullable<int> cMSYear)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_FilesProcess", cMSYearParameter);
        }
    
        public virtual ObjectResult<SPCI_BulkUpload_HistoryDetails_Result> SPCI_BulkUpload_HistoryDetails(Nullable<int> cmsYear, Nullable<int> categoryId, Nullable<int> status)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_BulkUpload_HistoryDetails_Result>("SPCI_BulkUpload_HistoryDetails", cmsYearParameter, categoryIdParameter, statusParameter);
        }
    
        public virtual int SPCI_BulkUpload_MeasureDataUpdate(Nullable<bool> isGPORO, Nullable<int> fileId)
        {
            var isGPOROParameter = isGPORO.HasValue ?
                new ObjectParameter("IsGPORO", isGPORO) :
                new ObjectParameter("IsGPORO", typeof(bool));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_MeasureDataUpdate", isGPOROParameter, fileIdParameter);
        }
    
        public virtual int SPCI_BulkUpload_MeasureDataUpdate_ACRStaff(Nullable<bool> isGPORO, Nullable<int> fileId)
        {
            var isGPOROParameter = isGPORO.HasValue ?
                new ObjectParameter("IsGPORO", isGPORO) :
                new ObjectParameter("IsGPORO", typeof(bool));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_MeasureDataUpdate_ACRStaff", isGPOROParameter, fileIdParameter);
        }
    
        public virtual ObjectResult<SPCI_BulkUpload_MeasureDataUpdate_ACRStaff_IA_Result> SPCI_BulkUpload_MeasureDataUpdate_ACRStaff_IA(Nullable<bool> isGPORO, Nullable<int> fileId)
        {
            var isGPOROParameter = isGPORO.HasValue ?
                new ObjectParameter("IsGPORO", isGPORO) :
                new ObjectParameter("IsGPORO", typeof(bool));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_BulkUpload_MeasureDataUpdate_ACRStaff_IA_Result>("SPCI_BulkUpload_MeasureDataUpdate_ACRStaff_IA", isGPOROParameter, fileIdParameter);
        }
    
        public virtual int SPCI_BulkUpload_MeasureDataUpdate_IA(Nullable<bool> isGPRO, Nullable<int> fileId)
        {
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("IsGPRO", isGPRO) :
                new ObjectParameter("IsGPRO", typeof(bool));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_MeasureDataUpdate_IA", isGPROParameter, fileIdParameter);
        }
    
        public virtual int SPCI_BulkUpload_MeasureDataUpdateForFacility(Nullable<bool> isGPORO, Nullable<int> fileId)
        {
            var isGPOROParameter = isGPORO.HasValue ?
                new ObjectParameter("IsGPORO", isGPORO) :
                new ObjectParameter("IsGPORO", typeof(bool));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_MeasureDataUpdateForFacility", isGPOROParameter, fileIdParameter);
        }
    
        public virtual int SPCI_BulkUpload_PREValidation_For_IA(Nullable<bool> isGPRO, Nullable<int> fileId)
        {
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("IsGPRO", isGPRO) :
                new ObjectParameter("IsGPRO", typeof(bool));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_PREValidation_For_IA", isGPROParameter, fileIdParameter);
        }
    
        public virtual int SPCI_BulkUpload_ReCalculatePerformance_TIN_Measure(Nullable<int> fileId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_ReCalculatePerformance_TIN_Measure", fileIdParameter);
        }
    
        public virtual int SPCI_BulkUpload_ReCalculatePerformance_TIN_NPI_Measure(Nullable<int> fileId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_BulkUpload_ReCalculatePerformance_TIN_NPI_Measure", fileIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SPCI_BulkUpload_SingleMeasureDataUpdate(Nullable<bool> isGPRO, string tIN, string npi, string measure_Name, Nullable<int> cmsYear, Nullable<int> total_no_of_exams_new, Nullable<bool> hundredPercentSubmit_new, Nullable<bool> selectedForCms_new, string userName, Nullable<int> noofExamsSubmitted, Nullable<int> total_no_of_exams_old, Nullable<bool> hundredPercentSubmit_old, Nullable<bool> selectedForCms_old, Nullable<decimal> performac_Rate, string decile, Nullable<decimal> reporting_Rate, Nullable<System.DateTime> createdDate, Nullable<int> fileId, string createdby)
        {
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("IsGPRO", isGPRO) :
                new ObjectParameter("IsGPRO", typeof(bool));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var measure_NameParameter = measure_Name != null ?
                new ObjectParameter("Measure_Name", measure_Name) :
                new ObjectParameter("Measure_Name", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var total_no_of_exams_newParameter = total_no_of_exams_new.HasValue ?
                new ObjectParameter("Total_no_of_exams_new", total_no_of_exams_new) :
                new ObjectParameter("Total_no_of_exams_new", typeof(int));
    
            var hundredPercentSubmit_newParameter = hundredPercentSubmit_new.HasValue ?
                new ObjectParameter("HundredPercentSubmit_new", hundredPercentSubmit_new) :
                new ObjectParameter("HundredPercentSubmit_new", typeof(bool));
    
            var selectedForCms_newParameter = selectedForCms_new.HasValue ?
                new ObjectParameter("SelectedForCms_new", selectedForCms_new) :
                new ObjectParameter("SelectedForCms_new", typeof(bool));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var noofExamsSubmittedParameter = noofExamsSubmitted.HasValue ?
                new ObjectParameter("NoofExamsSubmitted", noofExamsSubmitted) :
                new ObjectParameter("NoofExamsSubmitted", typeof(int));
    
            var total_no_of_exams_oldParameter = total_no_of_exams_old.HasValue ?
                new ObjectParameter("Total_no_of_exams_old", total_no_of_exams_old) :
                new ObjectParameter("Total_no_of_exams_old", typeof(int));
    
            var hundredPercentSubmit_oldParameter = hundredPercentSubmit_old.HasValue ?
                new ObjectParameter("HundredPercentSubmit_old", hundredPercentSubmit_old) :
                new ObjectParameter("HundredPercentSubmit_old", typeof(bool));
    
            var selectedForCms_oldParameter = selectedForCms_old.HasValue ?
                new ObjectParameter("SelectedForCms_old", selectedForCms_old) :
                new ObjectParameter("SelectedForCms_old", typeof(bool));
    
            var performac_RateParameter = performac_Rate.HasValue ?
                new ObjectParameter("Performac_Rate", performac_Rate) :
                new ObjectParameter("Performac_Rate", typeof(decimal));
    
            var decileParameter = decile != null ?
                new ObjectParameter("Decile", decile) :
                new ObjectParameter("Decile", typeof(string));
    
            var reporting_RateParameter = reporting_Rate.HasValue ?
                new ObjectParameter("Reporting_Rate", reporting_Rate) :
                new ObjectParameter("Reporting_Rate", typeof(decimal));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SPCI_BulkUpload_SingleMeasureDataUpdate", isGPROParameter, tINParameter, npiParameter, measure_NameParameter, cmsYearParameter, total_no_of_exams_newParameter, hundredPercentSubmit_newParameter, selectedForCms_newParameter, userNameParameter, noofExamsSubmittedParameter, total_no_of_exams_oldParameter, hundredPercentSubmit_oldParameter, selectedForCms_oldParameter, performac_RateParameter, decileParameter, reporting_RateParameter, createdDateParameter, fileIdParameter, createdbyParameter);
        }
    
        public virtual ObjectResult<SPCI_BulkUploadInvalidRecordsForTINNPIs_Result> SPCI_BulkUploadInvalidRecordsForTINNPIs(Nullable<int> fileId, Nullable<int> categoryId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_BulkUploadInvalidRecordsForTINNPIs_Result>("SPCI_BulkUploadInvalidRecordsForTINNPIs", fileIdParameter, categoryIdParameter);
        }
    
        public virtual ObjectResult<SPCI_BulkUploadInvalidRecordsForTINs_Result> SPCI_BulkUploadInvalidRecordsForTINs(Nullable<int> fileId, Nullable<int> categoryId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_BulkUploadInvalidRecordsForTINs_Result>("SPCI_BulkUploadInvalidRecordsForTINs", fileIdParameter, categoryIdParameter);
        }
    
        public virtual int SPCI_DeleteMeasureData(Nullable<int> keyId)
        {
            var keyIdParameter = keyId.HasValue ?
                new ObjectParameter("KeyId", keyId) :
                new ObjectParameter("KeyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_DeleteMeasureData", keyIdParameter);
        }
    
        public virtual ObjectResult<SPCI_DeleteMeasureswithFilter_Result> SPCI_DeleteMeasureswithFilter(string tin, string npi, string cmsyear, Nullable<int> type)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsyearParameter = cmsyear != null ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_DeleteMeasureswithFilter_Result>("SPCI_DeleteMeasureswithFilter", tinParameter, npiParameter, cmsyearParameter, typeParameter);
        }
    
        public virtual int SPCI_FinalScoreDetails(Nullable<int> cMSYear)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_FinalScoreDetails", cMSYearParameter);
        }
    
        public virtual ObjectResult<SPCI_GetBulkCMSTINNPISSubwithFilter_Result> SPCI_GetBulkCMSTINNPISSubwithFilter(string tin, string npi, Nullable<int> cmsyear, Nullable<bool> isSubmittoCMS, Nullable<int> category_Id, Nullable<int> type)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(int));
    
            var isSubmittoCMSParameter = isSubmittoCMS.HasValue ?
                new ObjectParameter("IsSubmittoCMS", isSubmittoCMS) :
                new ObjectParameter("IsSubmittoCMS", typeof(bool));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_GetBulkCMSTINNPISSubwithFilter_Result>("SPCI_GetBulkCMSTINNPISSubwithFilter", tinParameter, npiParameter, cmsyearParameter, isSubmittoCMSParameter, category_IdParameter, typeParameter);
        }
    
        public virtual ObjectResult<string> SPCI_GetCategorywiseResponseData(string tin, string npi, Nullable<int> cmsyear, Nullable<int> categotyId)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(int));
    
            var categotyIdParameter = categotyId.HasValue ?
                new ObjectParameter("CategotyId", categotyId) :
                new ObjectParameter("CategotyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPCI_GetCategorywiseResponseData", tinParameter, npiParameter, cmsyearParameter, categotyIdParameter);
        }
    
        public virtual int SPCI_GetFinalScorePendingDetails(Nullable<int> cMSYear)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_GetFinalScorePendingDetails", cMSYearParameter);
        }
    
        public virtual ObjectResult<SpCI_GetIsSubmittoCMSAndSubmittedDate_Result> SpCI_GetIsSubmittoCMSAndSubmittedDate(string tin, string npi, Nullable<int> cmsYear, Nullable<int> category_Id)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCI_GetIsSubmittoCMSAndSubmittedDate_Result>("SpCI_GetIsSubmittoCMSAndSubmittedDate", tinParameter, npiParameter, cmsYearParameter, category_IdParameter);
        }
    
        public virtual ObjectResult<SPCI_GetMeasurementsetIdswithFilter_Result> SPCI_GetMeasurementsetIdswithFilter(string tin, string npi, Nullable<int> cmsyear, Nullable<int> type)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_GetMeasurementsetIdswithFilter_Result>("SPCI_GetMeasurementsetIdswithFilter", tinParameter, npiParameter, cmsyearParameter, typeParameter);
        }
    
        public virtual ObjectResult<SpCI_GetMeasurementSetKeyForPatch_Result> SpCI_GetMeasurementSetKeyForPatch(string tin, string npi, Nullable<int> cmsYear, Nullable<int> category_Id)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpCI_GetMeasurementSetKeyForPatch_Result>("SpCI_GetMeasurementSetKeyForPatch", tinParameter, npiParameter, cmsYearParameter, category_IdParameter);
        }
    
        public virtual ObjectResult<SPCI_GetScoreDetails_Result> SPCI_GetScoreDetails(string tin, string npi, Nullable<int> cmsYear, Nullable<int> categoryId, Nullable<int> type, Nullable<int> pageNo, Nullable<int> pageLimit, Nullable<bool> iSASC, string sortColumn, string sortDirection)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageLimitParameter = pageLimit.HasValue ?
                new ObjectParameter("PageLimit", pageLimit) :
                new ObjectParameter("PageLimit", typeof(int));
    
            var iSASCParameter = iSASC.HasValue ?
                new ObjectParameter("ISASC", iSASC) :
                new ObjectParameter("ISASC", typeof(bool));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_GetScoreDetails_Result>("SPCI_GetScoreDetails", tinParameter, npiParameter, cmsYearParameter, categoryIdParameter, typeParameter, pageNoParameter, pageLimitParameter, iSASCParameter, sortColumnParameter, sortDirectionParameter);
        }
    
        public virtual ObjectResult<SPCI_GetSub_IndividualScore_Result> SPCI_GetSub_IndividualScore(string tIN, string npi, Nullable<int> cMSYear, Nullable<int> category_ID, Nullable<int> sub_Score_Id)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IDParameter = category_ID.HasValue ?
                new ObjectParameter("Category_ID", category_ID) :
                new ObjectParameter("Category_ID", typeof(int));
    
            var sub_Score_IdParameter = sub_Score_Id.HasValue ?
                new ObjectParameter("Sub_Score_Id", sub_Score_Id) :
                new ObjectParameter("Sub_Score_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_GetSub_IndividualScore_Result>("SPCI_GetSub_IndividualScore", tINParameter, npiParameter, cMSYearParameter, category_IDParameter, sub_Score_IdParameter);
        }
    
        public virtual ObjectResult<SPCI_GetSub_Score_Result> SPCI_GetSub_Score(string tIN, string npi, Nullable<int> cMSYear, Nullable<int> category_ID)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IDParameter = category_ID.HasValue ?
                new ObjectParameter("Category_ID", category_ID) :
                new ObjectParameter("Category_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_GetSub_Score_Result>("SPCI_GetSub_Score", tINParameter, npiParameter, cMSYearParameter, category_IDParameter);
        }
    
        public virtual ObjectResult<SPCI_GetSub_Score_All_Result> SPCI_GetSub_Score_All(string tIN, string npi, Nullable<int> cMSYear, Nullable<int> category_ID)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IDParameter = category_ID.HasValue ?
                new ObjectParameter("Category_ID", category_ID) :
                new ObjectParameter("Category_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_GetSub_Score_All_Result>("SPCI_GetSub_Score_All", tINParameter, npiParameter, cMSYearParameter, category_IDParameter);
        }
    
        public virtual ObjectResult<SPCI_GetSubmissionsDataByEntityType_N_Result> SPCI_GetSubmissionsDataByEntityType_N(string entityType)
        {
            var entityTypeParameter = entityType != null ?
                new ObjectParameter("EntityType", entityType) :
                new ObjectParameter("EntityType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_GetSubmissionsDataByEntityType_N_Result>("SPCI_GetSubmissionsDataByEntityType_N", entityTypeParameter);
        }
    
        public virtual ObjectResult<string> SPCI_GetSubmissionUniqueKeyId(string tin, string npi, Nullable<int> cmsYear)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPCI_GetSubmissionUniqueKeyId", tinParameter, npiParameter, cmsYearParameter);
        }
    
        public virtual int SPCI_GetTIN_NPI_ProcessDetails(Nullable<int> cMSYear)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_GetTIN_NPI_ProcessDetails", cMSYearParameter);
        }
    
        public virtual int SPCI_GproShedulerReportbyID_N(Nullable<int> shedule_Requestid, Nullable<bool> isGpro)
        {
            var shedule_RequestidParameter = shedule_Requestid.HasValue ?
                new ObjectParameter("Shedule_Requestid", shedule_Requestid) :
                new ObjectParameter("Shedule_Requestid", typeof(int));
    
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("isGpro", isGpro) :
                new ObjectParameter("isGpro", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_GproShedulerReportbyID_N", shedule_RequestidParameter, isGproParameter);
        }
    
        public virtual ObjectResult<SPCI_HttpStatusCodeDescription_Result> SPCI_HttpStatusCodeDescription()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_HttpStatusCodeDescription_Result>("SPCI_HttpStatusCodeDescription");
        }
    
        public virtual ObjectResult<Nullable<int>> SPCI_IABulkSubmissionMeasureUpdate(Nullable<int> cmsyear, Nullable<int> useId, Nullable<bool> isACRStaff)
        {
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("Cmsyear", cmsyear) :
                new ObjectParameter("Cmsyear", typeof(int));
    
            var useIdParameter = useId.HasValue ?
                new ObjectParameter("useId", useId) :
                new ObjectParameter("useId", typeof(int));
    
            var isACRStaffParameter = isACRStaff.HasValue ?
                new ObjectParameter("isACRStaff", isACRStaff) :
                new ObjectParameter("isACRStaff", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SPCI_IABulkSubmissionMeasureUpdate", cmsyearParameter, useIdParameter, isACRStaffParameter);
        }
    
        public virtual int SpCI_InsertPIAttestedMeasures(string tIN, Nullable<int> cMSYear, string userName, string nPI)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCI_InsertPIAttestedMeasures", tINParameter, cMSYearParameter, userNameParameter, nPIParameter);
        }
    
        public virtual int SPCI_InsertSubmissionDataDetails_N()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_InsertSubmissionDataDetails_N");
        }
    
        public virtual ObjectResult<Nullable<bool>> SPCI_IsAnyMeasureDataExistsForCMS(Nullable<int> cmsYear, string tin, string nPI, Nullable<int> categoryId, Nullable<bool> is90days, Nullable<bool> iSGPRO)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("Is90days", is90days) :
                new ObjectParameter("Is90days", typeof(bool));
    
            var iSGPROParameter = iSGPRO.HasValue ?
                new ObjectParameter("ISGPRO", iSGPRO) :
                new ObjectParameter("ISGPRO", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SPCI_IsAnyMeasureDataExistsForCMS", cmsYearParameter, tinParameter, nPIParameter, categoryIdParameter, is90daysParameter, iSGPROParameter);
        }
    
        public virtual ObjectResult<SPCI_NonGproValidationDetails_Result> SPCI_NonGproValidationDetails(string tin, string userName, Nullable<int> role, Nullable<int> cMSYear)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_NonGproValidationDetails_Result>("SPCI_NonGproValidationDetails", tinParameter, userNameParameter, roleParameter, cMSYearParameter);
        }
    
        public virtual int SpCI_Post_Patch_Insert(Nullable<int> inputCategory_Id, string request_Data, string tin, string npi, Nullable<int> cmsYear, string status, string createdBy, Nullable<int> method_Id, string response_Data, Nullable<int> status_Id, string submission_Uniquekey_Id, string measurementSet_Unquekey_id, string measurement_Uniquekey_id, Nullable<int> category_Id, Nullable<bool> isScoreSuccess, Nullable<int> status_Code, Nullable<bool> isFromSheduler, Nullable<bool> isScoreRequired, Nullable<bool> isPostType, Nullable<System.DateTime> responseStartDate, Nullable<int> measurecount, Nullable<System.DateTime> response_End_Date, Nullable<bool> bulkGpro, Nullable<int> shedulerReqId, Nullable<System.DateTime> created_Date, Nullable<bool> isBatchTins, string cehrtId)
        {
            var inputCategory_IdParameter = inputCategory_Id.HasValue ?
                new ObjectParameter("InputCategory_Id", inputCategory_Id) :
                new ObjectParameter("InputCategory_Id", typeof(int));
    
            var request_DataParameter = request_Data != null ?
                new ObjectParameter("Request_Data", request_Data) :
                new ObjectParameter("Request_Data", typeof(string));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var method_IdParameter = method_Id.HasValue ?
                new ObjectParameter("Method_Id", method_Id) :
                new ObjectParameter("Method_Id", typeof(int));
    
            var response_DataParameter = response_Data != null ?
                new ObjectParameter("Response_Data", response_Data) :
                new ObjectParameter("Response_Data", typeof(string));
    
            var status_IdParameter = status_Id.HasValue ?
                new ObjectParameter("Status_Id", status_Id) :
                new ObjectParameter("Status_Id", typeof(int));
    
            var submission_Uniquekey_IdParameter = submission_Uniquekey_Id != null ?
                new ObjectParameter("Submission_Uniquekey_Id", submission_Uniquekey_Id) :
                new ObjectParameter("Submission_Uniquekey_Id", typeof(string));
    
            var measurementSet_Unquekey_idParameter = measurementSet_Unquekey_id != null ?
                new ObjectParameter("MeasurementSet_Unquekey_id", measurementSet_Unquekey_id) :
                new ObjectParameter("MeasurementSet_Unquekey_id", typeof(string));
    
            var measurement_Uniquekey_idParameter = measurement_Uniquekey_id != null ?
                new ObjectParameter("Measurement_Uniquekey_id", measurement_Uniquekey_id) :
                new ObjectParameter("Measurement_Uniquekey_id", typeof(string));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var isScoreSuccessParameter = isScoreSuccess.HasValue ?
                new ObjectParameter("IsScoreSuccess", isScoreSuccess) :
                new ObjectParameter("IsScoreSuccess", typeof(bool));
    
            var status_CodeParameter = status_Code.HasValue ?
                new ObjectParameter("Status_Code", status_Code) :
                new ObjectParameter("Status_Code", typeof(int));
    
            var isFromShedulerParameter = isFromSheduler.HasValue ?
                new ObjectParameter("IsFromSheduler", isFromSheduler) :
                new ObjectParameter("IsFromSheduler", typeof(bool));
    
            var isScoreRequiredParameter = isScoreRequired.HasValue ?
                new ObjectParameter("IsScoreRequired", isScoreRequired) :
                new ObjectParameter("IsScoreRequired", typeof(bool));
    
            var isPostTypeParameter = isPostType.HasValue ?
                new ObjectParameter("IsPostType", isPostType) :
                new ObjectParameter("IsPostType", typeof(bool));
    
            var responseStartDateParameter = responseStartDate.HasValue ?
                new ObjectParameter("ResponseStartDate", responseStartDate) :
                new ObjectParameter("ResponseStartDate", typeof(System.DateTime));
    
            var measurecountParameter = measurecount.HasValue ?
                new ObjectParameter("measurecount", measurecount) :
                new ObjectParameter("measurecount", typeof(int));
    
            var response_End_DateParameter = response_End_Date.HasValue ?
                new ObjectParameter("Response_End_Date", response_End_Date) :
                new ObjectParameter("Response_End_Date", typeof(System.DateTime));
    
            var bulkGproParameter = bulkGpro.HasValue ?
                new ObjectParameter("BulkGpro", bulkGpro) :
                new ObjectParameter("BulkGpro", typeof(bool));
    
            var shedulerReqIdParameter = shedulerReqId.HasValue ?
                new ObjectParameter("ShedulerReqId", shedulerReqId) :
                new ObjectParameter("ShedulerReqId", typeof(int));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var isBatchTinsParameter = isBatchTins.HasValue ?
                new ObjectParameter("IsBatchTins", isBatchTins) :
                new ObjectParameter("IsBatchTins", typeof(bool));
    
            var cehrtIdParameter = cehrtId != null ?
                new ObjectParameter("cehrtId", cehrtId) :
                new ObjectParameter("cehrtId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCI_Post_Patch_Insert", inputCategory_IdParameter, request_DataParameter, tinParameter, npiParameter, cmsYearParameter, statusParameter, createdByParameter, method_IdParameter, response_DataParameter, status_IdParameter, submission_Uniquekey_IdParameter, measurementSet_Unquekey_idParameter, measurement_Uniquekey_idParameter, category_IdParameter, isScoreSuccessParameter, status_CodeParameter, isFromShedulerParameter, isScoreRequiredParameter, isPostTypeParameter, responseStartDateParameter, measurecountParameter, response_End_DateParameter, bulkGproParameter, shedulerReqIdParameter, created_DateParameter, isBatchTinsParameter, cehrtIdParameter);
        }
    
        public virtual ObjectResult<SPCI_Report_ScoreIASheet_Result> SPCI_Report_ScoreIASheet(Nullable<int> cMSYear, string userName, Nullable<bool> isTinReport, Nullable<bool> isACRStaff)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isTinReportParameter = isTinReport.HasValue ?
                new ObjectParameter("isTinReport", isTinReport) :
                new ObjectParameter("isTinReport", typeof(bool));
    
            var isACRStaffParameter = isACRStaff.HasValue ?
                new ObjectParameter("IsACRStaff", isACRStaff) :
                new ObjectParameter("IsACRStaff", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_Report_ScoreIASheet_Result>("SPCI_Report_ScoreIASheet", cMSYearParameter, userNameParameter, isTinReportParameter, isACRStaffParameter);
        }
    
        public virtual ObjectResult<SPCI_Report_ScorePISheet_Result> SPCI_Report_ScorePISheet(Nullable<int> cMSYear, string userName, Nullable<bool> isTinReport, Nullable<bool> isACRStaff)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isTinReportParameter = isTinReport.HasValue ?
                new ObjectParameter("isTinReport", isTinReport) :
                new ObjectParameter("isTinReport", typeof(bool));
    
            var isACRStaffParameter = isACRStaff.HasValue ?
                new ObjectParameter("IsACRStaff", isACRStaff) :
                new ObjectParameter("IsACRStaff", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_Report_ScorePISheet_Result>("SPCI_Report_ScorePISheet", cMSYearParameter, userNameParameter, isTinReportParameter, isACRStaffParameter);
        }
    
        public virtual ObjectResult<SPCI_Report_ScoreQMSheet_Result> SPCI_Report_ScoreQMSheet(Nullable<int> cMSYear, string userName, Nullable<bool> isTinReport, Nullable<bool> isACRStaff)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isTinReportParameter = isTinReport.HasValue ?
                new ObjectParameter("isTinReport", isTinReport) :
                new ObjectParameter("isTinReport", typeof(bool));
    
            var isACRStaffParameter = isACRStaff.HasValue ?
                new ObjectParameter("IsACRStaff", isACRStaff) :
                new ObjectParameter("IsACRStaff", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_Report_ScoreQMSheet_Result>("SPCI_Report_ScoreQMSheet", cMSYearParameter, userNameParameter, isTinReportParameter, isACRStaffParameter);
        }
    
        public virtual ObjectResult<SPCI_Report_ScoreSummarySheet_Result> SPCI_Report_ScoreSummarySheet(Nullable<int> cMSYear, string userName, Nullable<bool> isTinReport, Nullable<bool> isACRStaff)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isTinReportParameter = isTinReport.HasValue ?
                new ObjectParameter("isTinReport", isTinReport) :
                new ObjectParameter("isTinReport", typeof(bool));
    
            var isACRStaffParameter = isACRStaff.HasValue ?
                new ObjectParameter("IsACRStaff", isACRStaff) :
                new ObjectParameter("IsACRStaff", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_Report_ScoreSummarySheet_Result>("SPCI_Report_ScoreSummarySheet", cMSYearParameter, userNameParameter, isTinReportParameter, isACRStaffParameter);
        }
    
        public virtual int SpCI_Score_Insert(Nullable<bool> isFromSheduler, Nullable<bool> isScoreSuccess, string tin, string npi, Nullable<int> cmsYear, string createdBy, string status, string response_Data, string submission_Uniquekey_Id, Nullable<int> method_Id, Nullable<int> status_Id, Nullable<int> status_Code, Nullable<System.DateTime> response_Start_Date, Nullable<System.DateTime> response_End_Date)
        {
            var isFromShedulerParameter = isFromSheduler.HasValue ?
                new ObjectParameter("IsFromSheduler", isFromSheduler) :
                new ObjectParameter("IsFromSheduler", typeof(bool));
    
            var isScoreSuccessParameter = isScoreSuccess.HasValue ?
                new ObjectParameter("IsScoreSuccess", isScoreSuccess) :
                new ObjectParameter("IsScoreSuccess", typeof(bool));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var response_DataParameter = response_Data != null ?
                new ObjectParameter("Response_Data", response_Data) :
                new ObjectParameter("Response_Data", typeof(string));
    
            var submission_Uniquekey_IdParameter = submission_Uniquekey_Id != null ?
                new ObjectParameter("Submission_Uniquekey_Id", submission_Uniquekey_Id) :
                new ObjectParameter("Submission_Uniquekey_Id", typeof(string));
    
            var method_IdParameter = method_Id.HasValue ?
                new ObjectParameter("Method_Id", method_Id) :
                new ObjectParameter("Method_Id", typeof(int));
    
            var status_IdParameter = status_Id.HasValue ?
                new ObjectParameter("Status_Id", status_Id) :
                new ObjectParameter("Status_Id", typeof(int));
    
            var status_CodeParameter = status_Code.HasValue ?
                new ObjectParameter("Status_Code", status_Code) :
                new ObjectParameter("Status_Code", typeof(int));
    
            var response_Start_DateParameter = response_Start_Date.HasValue ?
                new ObjectParameter("Response_Start_Date", response_Start_Date) :
                new ObjectParameter("Response_Start_Date", typeof(System.DateTime));
    
            var response_End_DateParameter = response_End_Date.HasValue ?
                new ObjectParameter("Response_End_Date", response_End_Date) :
                new ObjectParameter("Response_End_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpCI_Score_Insert", isFromShedulerParameter, isScoreSuccessParameter, tinParameter, npiParameter, cmsYearParameter, createdByParameter, statusParameter, response_DataParameter, submission_Uniquekey_IdParameter, method_IdParameter, status_IdParameter, status_CodeParameter, response_Start_DateParameter, response_End_DateParameter);
        }
    
        public virtual int SPCI_Submission_Email_Remainder_GPRO(string tin, string userID)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_Submission_Email_Remainder_GPRO", tinParameter, userIDParameter);
        }
    
        public virtual int SPCI_Submission_Email_Remainder_nonGPRO(string tin, string nPI, string userID)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_Submission_Email_Remainder_nonGPRO", tinParameter, nPIParameter, userIDParameter);
        }
    
        public virtual ObjectResult<SPCI_SubmissionDetails_Result> SPCI_SubmissionDetails(Nullable<int> type, string tin, string npi, Nullable<int> cmsYear, Nullable<int> httpStatusCode, string status, Nullable<int> methodID, Nullable<int> pageNo, Nullable<int> pageLimit, Nullable<bool> iSASC, string sortColumn, string sortDirection)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var httpStatusCodeParameter = httpStatusCode.HasValue ?
                new ObjectParameter("HttpStatusCode", httpStatusCode) :
                new ObjectParameter("HttpStatusCode", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var methodIDParameter = methodID.HasValue ?
                new ObjectParameter("MethodID", methodID) :
                new ObjectParameter("MethodID", typeof(int));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageLimitParameter = pageLimit.HasValue ?
                new ObjectParameter("PageLimit", pageLimit) :
                new ObjectParameter("PageLimit", typeof(int));
    
            var iSASCParameter = iSASC.HasValue ?
                new ObjectParameter("ISASC", iSASC) :
                new ObjectParameter("ISASC", typeof(bool));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_SubmissionDetails_Result>("SPCI_SubmissionDetails", typeParameter, tinParameter, npiParameter, cmsYearParameter, httpStatusCodeParameter, statusParameter, methodIDParameter, pageNoParameter, pageLimitParameter, iSASCParameter, sortColumnParameter, sortDirectionParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> SPCI_SubsDataSyncStatusUpdate(string entityType, Nullable<int> totalCount, string username)
        {
            var entityTypeParameter = entityType != null ?
                new ObjectParameter("EntityType", entityType) :
                new ObjectParameter("EntityType", typeof(string));
    
            var totalCountParameter = totalCount.HasValue ?
                new ObjectParameter("TotalCount", totalCount) :
                new ObjectParameter("TotalCount", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("SPCI_SubsDataSyncStatusUpdate", entityTypeParameter, totalCountParameter, usernameParameter);
        }
    
        public virtual ObjectResult<SPCI_TIN_ScoreDetails_Result> SPCI_TIN_ScoreDetails(string tIN, Nullable<int> cMSYear)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_TIN_ScoreDetails_Result>("SPCI_TIN_ScoreDetails", tINParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<SPCI_TINCMSSubStatusReports_ACRStaff_Result> SPCI_TINCMSSubStatusReports_ACRStaff(Nullable<int> cmsYear)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_TINCMSSubStatusReports_ACRStaff_Result>("SPCI_TINCMSSubStatusReports_ACRStaff", cmsYearParameter);
        }
    
        public virtual ObjectResult<SPCI_TINNPI_ScoreDetails_Result> SPCI_TINNPI_ScoreDetails(string tIN, string nPI, Nullable<int> cMSYear)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_TINNPI_ScoreDetails_Result>("SPCI_TINNPI_ScoreDetails", tINParameter, nPIParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<SPCI_TINNPICMSSubStatusReports_ACRStaff_Result> SPCI_TINNPICMSSubStatusReports_ACRStaff(Nullable<int> cmsYear)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCI_TINNPICMSSubStatusReports_ACRStaff_Result>("SPCI_TINNPICMSSubStatusReports_ACRStaff", cmsYearParameter);
        }
    
        public virtual int SPCI_UpdateMeasureData(string tin, string nPI, Nullable<int> category_Id)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_UpdateMeasureData", tinParameter, nPIParameter, category_IdParameter);
        }
    
        public virtual int SPCI_UpdateMeasurementSetKeys_N(string tin, string npi, Nullable<int> cmsYear, Nullable<int> responseId)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var responseIdParameter = responseId.HasValue ?
                new ObjectParameter("ResponseId", responseId) :
                new ObjectParameter("ResponseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_UpdateMeasurementSetKeys_N", tinParameter, npiParameter, cmsYearParameter, responseIdParameter);
        }
    
        public virtual int SPCI_UpdateMeasurementSetKeysByCategory(string tin, string npi, Nullable<int> cmsYear, Nullable<int> responseId, string measurementSet_Unquekey_id, string submission_Uniquekey_Id, Nullable<int> categoryId)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var responseIdParameter = responseId.HasValue ?
                new ObjectParameter("ResponseId", responseId) :
                new ObjectParameter("ResponseId", typeof(int));
    
            var measurementSet_Unquekey_idParameter = measurementSet_Unquekey_id != null ?
                new ObjectParameter("MeasurementSet_Unquekey_id", measurementSet_Unquekey_id) :
                new ObjectParameter("MeasurementSet_Unquekey_id", typeof(string));
    
            var submission_Uniquekey_IdParameter = submission_Uniquekey_Id != null ?
                new ObjectParameter("Submission_Uniquekey_Id", submission_Uniquekey_Id) :
                new ObjectParameter("Submission_Uniquekey_Id", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_UpdateMeasurementSetKeysByCategory", tinParameter, npiParameter, cmsYearParameter, responseIdParameter, measurementSet_Unquekey_idParameter, submission_Uniquekey_IdParameter, categoryIdParameter);
        }
    
        public virtual int SPCI_Updatetbl_CI_Source_UniqueKeys(string tin, string npi, Nullable<int> cmsYear, Nullable<int> category_Id)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCI_Updatetbl_CI_Source_UniqueKeys", tinParameter, npiParameter, cmsYearParameter, category_IdParameter);
        }
    
        public virtual int SpDeleteACIAssestedMeasures(string tIN, Nullable<int> cMSYear, string userName, Nullable<bool> isGPRO, string nPI)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("isGPRO", isGPRO) :
                new ObjectParameter("isGPRO", typeof(bool));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDeleteACIAssestedMeasures", tINParameter, cMSYearParameter, userNameParameter, isGPROParameter, nPIParameter);
        }
    
        public virtual int spDeleteFacilityUserNPIs(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteFacilityUserNPIs", userIDParameter);
        }
    
        public virtual int spDeleteMigrateImportData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteMigrateImportData");
        }
    
        public virtual int spDeleteNewTransImportData(Nullable<int> importID, string transactionid, string appid, string partnerID, string facilityID)
        {
            var importIDParameter = importID.HasValue ?
                new ObjectParameter("ImportID", importID) :
                new ObjectParameter("ImportID", typeof(int));
    
            var transactionidParameter = transactionid != null ?
                new ObjectParameter("Transactionid", transactionid) :
                new ObjectParameter("Transactionid", typeof(string));
    
            var appidParameter = appid != null ?
                new ObjectParameter("Appid", appid) :
                new ObjectParameter("Appid", typeof(string));
    
            var partnerIDParameter = partnerID != null ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(string));
    
            var facilityIDParameter = facilityID != null ?
                new ObjectParameter("facilityID", facilityID) :
                new ObjectParameter("facilityID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteNewTransImportData", importIDParameter, transactionidParameter, appidParameter, partnerIDParameter, facilityIDParameter);
        }
    
        public virtual int spDeletePhysicianUserTINs(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeletePhysicianUserTINs", userIDParameter);
        }
    
        public virtual int spDeletePrevTransImportData(string transactionid, string prev_Transactionid, string appid, string partnerID, string facilityID)
        {
            var transactionidParameter = transactionid != null ?
                new ObjectParameter("Transactionid", transactionid) :
                new ObjectParameter("Transactionid", typeof(string));
    
            var prev_TransactionidParameter = prev_Transactionid != null ?
                new ObjectParameter("prev_Transactionid", prev_Transactionid) :
                new ObjectParameter("prev_Transactionid", typeof(string));
    
            var appidParameter = appid != null ?
                new ObjectParameter("Appid", appid) :
                new ObjectParameter("Appid", typeof(string));
    
            var partnerIDParameter = partnerID != null ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(string));
    
            var facilityIDParameter = facilityID != null ?
                new ObjectParameter("facilityID", facilityID) :
                new ObjectParameter("facilityID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeletePrevTransImportData", transactionidParameter, prev_TransactionidParameter, appidParameter, partnerIDParameter, facilityIDParameter);
        }
    
        public virtual ObjectResult<spDisableTransactionData_Result> spDisableTransactionData(string prev_TransactionID, string new_TrascationId)
        {
            var prev_TransactionIDParameter = prev_TransactionID != null ?
                new ObjectParameter("prev_TransactionID", prev_TransactionID) :
                new ObjectParameter("prev_TransactionID", typeof(string));
    
            var new_TrascationIdParameter = new_TrascationId != null ?
                new ObjectParameter("New_TrascationId", new_TrascationId) :
                new ObjectParameter("New_TrascationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDisableTransactionData_Result>("spDisableTransactionData", prev_TransactionIDParameter, new_TrascationIdParameter);
        }
    
        public virtual ObjectResult<SpEmail_GetAppSettings_Result> SpEmail_GetAppSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpEmail_GetAppSettings_Result>("SpEmail_GetAppSettings");
        }
    
        public virtual int SpEmail_InsertData(Nullable<int> emailTemplateId, string subject, string body, Nullable<bool> emailStatus, Nullable<int> userId, string tIN, string nPI, Nullable<int> cMSYear, string toAddress)
        {
            var emailTemplateIdParameter = emailTemplateId.HasValue ?
                new ObjectParameter("EmailTemplateId", emailTemplateId) :
                new ObjectParameter("EmailTemplateId", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var emailStatusParameter = emailStatus.HasValue ?
                new ObjectParameter("EmailStatus", emailStatus) :
                new ObjectParameter("EmailStatus", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var toAddressParameter = toAddress != null ?
                new ObjectParameter("ToAddress", toAddress) :
                new ObjectParameter("ToAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpEmail_InsertData", emailTemplateIdParameter, subjectParameter, bodyParameter, emailStatusParameter, userIdParameter, tINParameter, nPIParameter, cMSYearParameter, toAddressParameter);
        }
    
        public virtual ObjectResult<SpEmailTemplate_GetDetails_Result> SpEmailTemplate_GetDetails(string emailTemplateType, Nullable<int> emailTemplateTypeId)
        {
            var emailTemplateTypeParameter = emailTemplateType != null ?
                new ObjectParameter("EmailTemplateType", emailTemplateType) :
                new ObjectParameter("EmailTemplateType", typeof(string));
    
            var emailTemplateTypeIdParameter = emailTemplateTypeId.HasValue ?
                new ObjectParameter("EmailTemplateTypeId", emailTemplateTypeId) :
                new ObjectParameter("EmailTemplateTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpEmailTemplate_GetDetails_Result>("SpEmailTemplate_GetDetails", emailTemplateTypeParameter, emailTemplateTypeIdParameter);
        }
    
        public virtual int SPExamData_Decrypted_PatientIds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPExamData_Decrypted_PatientIds");
        }
    
        public virtual int spFileDependencies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFileDependencies");
        }
    
        public virtual int spFileDependenciesByFileId(Nullable<int> inFileid)
        {
            var inFileidParameter = inFileid.HasValue ?
                new ObjectParameter("InFileid", inFileid) :
                new ObjectParameter("InFileid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFileDependenciesByFileId", inFileidParameter);
        }
    
        public virtual ObjectResult<spFileProcessHistoryDetails_Result> spFileProcessHistoryDetails(string sortColumn, string sortDirection, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> pageNo, Nullable<int> pageLimit, Nullable<int> cmsYear, Nullable<int> processType, Nullable<int> status)
        {
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageLimitParameter = pageLimit.HasValue ?
                new ObjectParameter("PageLimit", pageLimit) :
                new ObjectParameter("PageLimit", typeof(int));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var processTypeParameter = processType.HasValue ?
                new ObjectParameter("ProcessType", processType) :
                new ObjectParameter("ProcessType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFileProcessHistoryDetails_Result>("spFileProcessHistoryDetails", sortColumnParameter, sortDirectionParameter, startDateParameter, endDateParameter, pageNoParameter, pageLimitParameter, cmsYearParameter, processTypeParameter, statusParameter);
        }
    
        public virtual ObjectResult<string> SpGet_DenomProc_Code_ForManualDataEntry(Nullable<int> measure_ID, string gender_Restriction, Nullable<int> age)
        {
            var measure_IDParameter = measure_ID.HasValue ?
                new ObjectParameter("Measure_ID", measure_ID) :
                new ObjectParameter("Measure_ID", typeof(int));
    
            var gender_RestrictionParameter = gender_Restriction != null ?
                new ObjectParameter("Gender_Restriction", gender_Restriction) :
                new ObjectParameter("Gender_Restriction", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGet_DenomProc_Code_ForManualDataEntry", measure_IDParameter, gender_RestrictionParameter, ageParameter);
        }
    
        public virtual ObjectResult<string> SPGet_Measurenum_helpofProc_NumreratorCodes(Nullable<int> cMSYear, string numerator_Code, string proc_code)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var numerator_CodeParameter = numerator_Code != null ?
                new ObjectParameter("Numerator_Code", numerator_Code) :
                new ObjectParameter("Numerator_Code", typeof(string));
    
            var proc_codeParameter = proc_code != null ?
                new ObjectParameter("Proc_code", proc_code) :
                new ObjectParameter("Proc_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPGet_Measurenum_helpofProc_NumreratorCodes", cMSYearParameter, numerator_CodeParameter, proc_codeParameter);
        }
    
        public virtual ObjectResult<SpGetAC_PI_MeasureData_Tin_Result> SpGetAC_PI_MeasureData_Tin(string tIN, Nullable<int> cMSYear)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAC_PI_MeasureData_Tin_Result>("SpGetAC_PI_MeasureData_Tin", tINParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<SPGetActivitieslist_IA_Result> SPGetActivitieslist_IA(Nullable<int> cMSYear, Nullable<int> role, Nullable<int> category_Id, string tin, string npi, Nullable<bool> isGPRO, string facilityusername, Nullable<int> userid)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("isGPRO", isGPRO) :
                new ObjectParameter("isGPRO", typeof(bool));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetActivitieslist_IA_Result>("SPGetActivitieslist_IA", cMSYearParameter, roleParameter, category_IdParameter, tinParameter, npiParameter, isGPROParameter, facilityusernameParameter, useridParameter);
        }
    
        public virtual ObjectResult<SPGetActivitieslist_IA_bak_Result> SPGetActivitieslist_IA_bak(Nullable<int> cMSYear, Nullable<int> role, string tin, string npi, Nullable<bool> isGPRO, string facilityusername)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("isGPRO", isGPRO) :
                new ObjectParameter("isGPRO", typeof(bool));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetActivitieslist_IA_bak_Result>("SPGetActivitieslist_IA_bak", cMSYearParameter, roleParameter, tinParameter, npiParameter, isGPROParameter, facilityusernameParameter);
        }
    
        public virtual ObjectResult<SPGetActivitieslistIA_ACRStaff_Result> SPGetActivitieslistIA_ACRStaff(Nullable<int> cMSYear, Nullable<int> role, Nullable<int> category_Id, string tin, string npi, Nullable<bool> isGPRO, string facilityusername, Nullable<int> userid)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("isGPRO", isGPRO) :
                new ObjectParameter("isGPRO", typeof(bool));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetActivitieslistIA_ACRStaff_Result>("SPGetActivitieslistIA_ACRStaff", cMSYearParameter, roleParameter, category_IdParameter, tinParameter, npiParameter, isGPROParameter, facilityusernameParameter, useridParameter);
        }
    
        public virtual ObjectResult<SPGetActivitieslistIA_Facility_Result> SPGetActivitieslistIA_Facility(Nullable<int> cMSYear, Nullable<int> category_Id, string tin, string npi, Nullable<bool> isGPRO, string facilityusername, Nullable<int> userid)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("isGPRO", isGPRO) :
                new ObjectParameter("isGPRO", typeof(bool));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetActivitieslistIA_Facility_Result>("SPGetActivitieslistIA_Facility", cMSYearParameter, category_IdParameter, tinParameter, npiParameter, isGPROParameter, facilityusernameParameter, useridParameter);
        }
    
        public virtual ObjectResult<SPGetActivitieslistIA_Physician_Result> SPGetActivitieslistIA_Physician(Nullable<int> cMSYear, Nullable<int> role, Nullable<int> category_Id, string tin, string npi, Nullable<bool> isGPRO, string facilityusername, Nullable<int> userid)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("isGPRO", isGPRO) :
                new ObjectParameter("isGPRO", typeof(bool));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetActivitieslistIA_Physician_Result>("SPGetActivitieslistIA_Physician", cMSYearParameter, roleParameter, category_IdParameter, tinParameter, npiParameter, isGPROParameter, facilityusernameParameter, useridParameter);
        }
    
        public virtual ObjectResult<SpGetBlockMeasureDetails_Result> SpGetBlockMeasureDetails(string tin, Nullable<int> cmsYear, Nullable<int> categoryId)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBlockMeasureDetails_Result>("SpGetBlockMeasureDetails", tinParameter, cmsYearParameter, categoryIdParameter);
        }
    
        public virtual ObjectResult<SpGetCMSPaymentsActiveStatus_Result> SpGetCMSPaymentsActiveStatus(string userName, Nullable<bool> isSingleUser, Nullable<int> cMSYear)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isSingleUserParameter = isSingleUser.HasValue ?
                new ObjectParameter("IsSingleUser", isSingleUser) :
                new ObjectParameter("IsSingleUser", typeof(bool));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetCMSPaymentsActiveStatus_Result>("SpGetCMSPaymentsActiveStatus", userNameParameter, isSingleUserParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<SpgetEligibleMeasuresOnAge_Result> SpgetEligibleMeasuresOnAge(Nullable<int> cMSYear, string gender_Restriction, Nullable<int> age, Nullable<System.DateTime> examDate)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var gender_RestrictionParameter = gender_Restriction != null ?
                new ObjectParameter("Gender_Restriction", gender_Restriction) :
                new ObjectParameter("Gender_Restriction", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var examDateParameter = examDate.HasValue ?
                new ObjectParameter("examDate", examDate) :
                new ObjectParameter("examDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpgetEligibleMeasuresOnAge_Result>("SpgetEligibleMeasuresOnAge", cMSYearParameter, gender_RestrictionParameter, ageParameter, examDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SPgetExamCountbyFileId(Nullable<int> fileId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SPgetExamCountbyFileId", fileIdParameter);
        }
    
        public virtual ObjectResult<spGetFacilityAccessDetailsforUploadedFiles_Result> spGetFacilityAccessDetailsforUploadedFiles(string facilityUserName, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> facilityUserId, string searchStatus, Nullable<int> pageNo, Nullable<int> pageLimit, Nullable<bool> iSASC, string sortColumn, string sortDirection, string filename, string tIN, string submitterName)
        {
            var facilityUserNameParameter = facilityUserName != null ?
                new ObjectParameter("FacilityUserName", facilityUserName) :
                new ObjectParameter("FacilityUserName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var facilityUserIdParameter = facilityUserId.HasValue ?
                new ObjectParameter("FacilityUserId", facilityUserId) :
                new ObjectParameter("FacilityUserId", typeof(int));
    
            var searchStatusParameter = searchStatus != null ?
                new ObjectParameter("SearchStatus", searchStatus) :
                new ObjectParameter("SearchStatus", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageLimitParameter = pageLimit.HasValue ?
                new ObjectParameter("PageLimit", pageLimit) :
                new ObjectParameter("PageLimit", typeof(int));
    
            var iSASCParameter = iSASC.HasValue ?
                new ObjectParameter("ISASC", iSASC) :
                new ObjectParameter("ISASC", typeof(bool));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var submitterNameParameter = submitterName != null ?
                new ObjectParameter("SubmitterName", submitterName) :
                new ObjectParameter("SubmitterName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetFacilityAccessDetailsforUploadedFiles_Result>("spGetFacilityAccessDetailsforUploadedFiles", facilityUserNameParameter, startDateParameter, endDateParameter, facilityUserIdParameter, searchStatusParameter, pageNoParameter, pageLimitParameter, iSASCParameter, sortColumnParameter, sortDirectionParameter, filenameParameter, tINParameter, submitterNameParameter);
        }
    
        public virtual ObjectResult<SPGetFacilityTinRelatedPhysicianDetails_Result> SPGetFacilityTinRelatedPhysicianDetails(string username, string tIN)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetFacilityTinRelatedPhysicianDetails_Result>("SPGetFacilityTinRelatedPhysicianDetails", usernameParameter, tINParameter);
        }
    
        public virtual ObjectResult<spGetFacilityTins_EmailAddress_Result> spGetFacilityTins_EmailAddress(string userName, Nullable<int> cMSYear)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetFacilityTins_EmailAddress_Result>("spGetFacilityTins_EmailAddress", userNameParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<spGetFilenames_of_NnumeratorZero_Result> spGetFilenames_of_NnumeratorZero(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string status)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetFilenames_of_NnumeratorZero_Result>("spGetFilenames_of_NnumeratorZero", startdateParameter, enddateParameter, statusParameter);
        }
    
        public virtual ObjectResult<spGetGproACIXmlData_Result> spGetGproACIXmlData(Nullable<int> cMSYear)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetGproACIXmlData_Result>("spGetGproACIXmlData", cMSYearParameter);
        }
    
        public virtual ObjectResult<spGetGproACIXmlData_Tin_Result> spGetGproACIXmlData_Tin(Nullable<int> cMSYear, string tin)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetGproACIXmlData_Tin_Result>("spGetGproACIXmlData_Tin", cMSYearParameter, tinParameter);
        }
    
        public virtual ObjectResult<SPGetGPROCMSSubmittedTins_Result> SPGetGPROCMSSubmittedTins(Nullable<int> cMSYear, string faciliyUserName, Nullable<int> userRole, string nPI)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var faciliyUserNameParameter = faciliyUserName != null ?
                new ObjectParameter("FaciliyUserName", faciliyUserName) :
                new ObjectParameter("FaciliyUserName", typeof(string));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(int));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetGPROCMSSubmittedTins_Result>("SPGetGPROCMSSubmittedTins", cMSYearParameter, faciliyUserNameParameter, userRoleParameter, nPIParameter);
        }
    
        public virtual ObjectResult<spGetGproIAXmlData_Result> spGetGproIAXmlData(Nullable<int> cMSYear)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetGproIAXmlData_Result>("spGetGproIAXmlData", cMSYearParameter);
        }
    
        public virtual ObjectResult<spGetGproIAXmlData_Tin_Result> spGetGproIAXmlData_Tin(Nullable<int> cMSYear, string tin)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetGproIAXmlData_Tin_Result>("spGetGproIAXmlData_Tin", cMSYearParameter, tinParameter);
        }
    
        public virtual ObjectResult<SpGetHitrustSiteActiveStatus_Result> SpGetHitrustSiteActiveStatus(Nullable<int> userId, Nullable<bool> isSingleUser)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var isSingleUserParameter = isSingleUser.HasValue ?
                new ObjectParameter("IsSingleUser", isSingleUser) :
                new ObjectParameter("IsSingleUser", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetHitrustSiteActiveStatus_Result>("SpGetHitrustSiteActiveStatus", userIdParameter, isSingleUserParameter);
        }
    
        public virtual ObjectResult<spGetIAGPROAttestation_Finalize_Activities_Result> spGetIAGPROAttestation_Finalize_Activities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetIAGPROAttestation_Finalize_Activities_Result>("spGetIAGPROAttestation_Finalize_Activities");
        }
    
        public virtual ObjectResult<spGetIANonGPROAttestation_Finalize_Activities_Result> spGetIANonGPROAttestation_Finalize_Activities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetIANonGPROAttestation_Finalize_Activities_Result>("spGetIANonGPROAttestation_Finalize_Activities");
        }
    
        public virtual int spGetLatestTINsOfNPI(string strNPI)
        {
            var strNPIParameter = strNPI != null ?
                new ObjectParameter("strNPI", strNPI) :
                new ObjectParameter("strNPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetLatestTINsOfNPI", strNPIParameter);
        }
    
        public virtual int spGetLookupDataBasedonCategory(Nullable<int> cMSYear, Nullable<int> categoryId)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetLookupDataBasedonCategory", cMSYearParameter, categoryIdParameter);
        }
    
        public virtual ObjectResult<SpGetMeasureRulesConfigPart1_Result> SpGetMeasureRulesConfigPart1(Nullable<int> cMSYear, Nullable<int> categoryId, Nullable<int> ruleId)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var ruleIdParameter = ruleId.HasValue ?
                new ObjectParameter("RuleId", ruleId) :
                new ObjectParameter("RuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetMeasureRulesConfigPart1_Result>("SpGetMeasureRulesConfigPart1", cMSYearParameter, categoryIdParameter, ruleIdParameter);
        }
    
        public virtual ObjectResult<SPGetMeasureslistByRuleId_Result> SPGetMeasureslistByRuleId(Nullable<int> ruleId, Nullable<int> cMSYear)
        {
            var ruleIdParameter = ruleId.HasValue ?
                new ObjectParameter("RuleId", ruleId) :
                new ObjectParameter("RuleId", typeof(int));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetMeasureslistByRuleId_Result>("SPGetMeasureslistByRuleId", ruleIdParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<SPGetMeasureslistByRuleIdCompare_Result> SPGetMeasureslistByRuleIdCompare(Nullable<int> ruleId, Nullable<int> compareYear, Nullable<int> currentYear)
        {
            var ruleIdParameter = ruleId.HasValue ?
                new ObjectParameter("RuleId", ruleId) :
                new ObjectParameter("RuleId", typeof(int));
    
            var compareYearParameter = compareYear.HasValue ?
                new ObjectParameter("CompareYear", compareYear) :
                new ObjectParameter("CompareYear", typeof(int));
    
            var currentYearParameter = currentYear.HasValue ?
                new ObjectParameter("CurrentYear", currentYear) :
                new ObjectParameter("CurrentYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetMeasureslistByRuleIdCompare_Result>("SPGetMeasureslistByRuleIdCompare", ruleIdParameter, compareYearParameter, currentYearParameter);
        }
    
        public virtual ObjectResult<spGetNonGproACIXmlData_Result> spGetNonGproACIXmlData(Nullable<int> cMSYear)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNonGproACIXmlData_Result>("spGetNonGproACIXmlData", cMSYearParameter);
        }
    
        public virtual ObjectResult<spGetNonGproACIXmlData_Tin_Result> spGetNonGproACIXmlData_Tin(Nullable<int> cMSYear, string tin)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNonGproACIXmlData_Tin_Result>("spGetNonGproACIXmlData_Tin", cMSYearParameter, tinParameter);
        }
    
        public virtual ObjectResult<spGetNonGproACIXmlData_Tin_NPI_Result> spGetNonGproACIXmlData_Tin_NPI(Nullable<int> cMSYear, string tin, string npi)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNonGproACIXmlData_Tin_NPI_Result>("spGetNonGproACIXmlData_Tin_NPI", cMSYearParameter, tinParameter, npiParameter);
        }
    
        public virtual ObjectResult<SPGetNonGproCMSSubmittedTins_Result> SPGetNonGproCMSSubmittedTins(Nullable<int> cMSYear, string faciliyUserName, Nullable<int> userRole, string nPIs)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var faciliyUserNameParameter = faciliyUserName != null ?
                new ObjectParameter("FaciliyUserName", faciliyUserName) :
                new ObjectParameter("FaciliyUserName", typeof(string));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(int));
    
            var nPIsParameter = nPIs != null ?
                new ObjectParameter("NPIs", nPIs) :
                new ObjectParameter("NPIs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetNonGproCMSSubmittedTins_Result>("SPGetNonGproCMSSubmittedTins", cMSYearParameter, faciliyUserNameParameter, userRoleParameter, nPIsParameter);
        }
    
        public virtual ObjectResult<SpGetNonGproIA_PI_MeasureData_Tin_Result> SpGetNonGproIA_PI_MeasureData_Tin(string tIN, string nPI, Nullable<int> cMSYear)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetNonGproIA_PI_MeasureData_Tin_Result>("SpGetNonGproIA_PI_MeasureData_Tin", tINParameter, nPIParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<spGetNonGproIAXmlData_Result> spGetNonGproIAXmlData(Nullable<int> cMSYear)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNonGproIAXmlData_Result>("spGetNonGproIAXmlData", cMSYearParameter);
        }
    
        public virtual ObjectResult<spGetNonGproIAXmlData_Tin_Result> spGetNonGproIAXmlData_Tin(Nullable<int> cMSYear, string tin)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNonGproIAXmlData_Tin_Result>("spGetNonGproIAXmlData_Tin", cMSYearParameter, tinParameter);
        }
    
        public virtual ObjectResult<spGetNonGproIAXmlData_Tin_NPI_Result> spGetNonGproIAXmlData_Tin_NPI(Nullable<int> cMSYear, string tin, string npi)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNonGproIAXmlData_Tin_NPI_Result>("spGetNonGproIAXmlData_Tin_NPI", cMSYearParameter, tinParameter, npiParameter);
        }
    
        public virtual ObjectResult<string> SPGetNpisofTin_VW(string nPI)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPGetNpisofTin_VW", nPIParameter);
        }
    
        public virtual ObjectResult<SPGetNpisofTinwithDescription_VW_Result> SPGetNpisofTinwithDescription_VW(string nPI)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetNpisofTinwithDescription_VW_Result>("SPGetNpisofTinwithDescription_VW", nPIParameter);
        }
    
        public virtual ObjectResult<SPGetProcessRecordCount_Result> SPGetProcessRecordCount(Nullable<int> fileId, Nullable<int> reqId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("ReqId", reqId) :
                new ObjectParameter("ReqId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetProcessRecordCount_Result>("SPGetProcessRecordCount", fileIdParameter, reqIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spgetQMXML_examscount_TINGpro_NonGpro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spgetQMXML_examscount_TINGpro_NonGpro");
        }
    
        public virtual ObjectResult<spGetRecordsEnteredPageGridDetails_Result> spGetRecordsEnteredPageGridDetails(string facilityUserName, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> facilityUserId, Nullable<int> pageNo, Nullable<int> pageLimit, Nullable<bool> iSASC, string sortColumn, string sortDirection, string examTin, string examNpi, Nullable<int> measureId, Nullable<bool> isFacilityRole, Nullable<int> cMSYear, string searchtext, Nullable<decimal> patientAge, string cPTCode, string patientSex)
        {
            var facilityUserNameParameter = facilityUserName != null ?
                new ObjectParameter("FacilityUserName", facilityUserName) :
                new ObjectParameter("FacilityUserName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var facilityUserIdParameter = facilityUserId.HasValue ?
                new ObjectParameter("FacilityUserId", facilityUserId) :
                new ObjectParameter("FacilityUserId", typeof(int));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageLimitParameter = pageLimit.HasValue ?
                new ObjectParameter("PageLimit", pageLimit) :
                new ObjectParameter("PageLimit", typeof(int));
    
            var iSASCParameter = iSASC.HasValue ?
                new ObjectParameter("ISASC", iSASC) :
                new ObjectParameter("ISASC", typeof(bool));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var examTinParameter = examTin != null ?
                new ObjectParameter("ExamTin", examTin) :
                new ObjectParameter("ExamTin", typeof(string));
    
            var examNpiParameter = examNpi != null ?
                new ObjectParameter("ExamNpi", examNpi) :
                new ObjectParameter("ExamNpi", typeof(string));
    
            var measureIdParameter = measureId.HasValue ?
                new ObjectParameter("MeasureId", measureId) :
                new ObjectParameter("MeasureId", typeof(int));
    
            var isFacilityRoleParameter = isFacilityRole.HasValue ?
                new ObjectParameter("IsFacilityRole", isFacilityRole) :
                new ObjectParameter("IsFacilityRole", typeof(bool));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var searchtextParameter = searchtext != null ?
                new ObjectParameter("Searchtext", searchtext) :
                new ObjectParameter("Searchtext", typeof(string));
    
            var patientAgeParameter = patientAge.HasValue ?
                new ObjectParameter("PatientAge", patientAge) :
                new ObjectParameter("PatientAge", typeof(decimal));
    
            var cPTCodeParameter = cPTCode != null ?
                new ObjectParameter("CPTCode", cPTCode) :
                new ObjectParameter("CPTCode", typeof(string));
    
            var patientSexParameter = patientSex != null ?
                new ObjectParameter("PatientSex", patientSex) :
                new ObjectParameter("PatientSex", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetRecordsEnteredPageGridDetails_Result>("spGetRecordsEnteredPageGridDetails", facilityUserNameParameter, startDateParameter, endDateParameter, facilityUserIdParameter, pageNoParameter, pageLimitParameter, iSASCParameter, sortColumnParameter, sortDirectionParameter, examTinParameter, examNpiParameter, measureIdParameter, isFacilityRoleParameter, cMSYearParameter, searchtextParameter, patientAgeParameter, cPTCodeParameter, patientSexParameter);
        }
    
        public virtual int spgetReportingRateGreaterThan100TemplateBody(ObjectParameter emailtemplate, ObjectParameter toAddress, ObjectParameter subject, Nullable<bool> isFromPortal)
        {
            var isFromPortalParameter = isFromPortal.HasValue ?
                new ObjectParameter("isFromPortal", isFromPortal) :
                new ObjectParameter("isFromPortal", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spgetReportingRateGreaterThan100TemplateBody", emailtemplate, toAddress, subject, isFromPortalParameter);
        }
    
        public virtual ObjectResult<spGetStartEndDateForACI_Result> spGetStartEndDateForACI(Nullable<int> cMSYear, string tIN, string nPI, Nullable<bool> isGpro)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("isGpro", isGpro) :
                new ObjectParameter("isGpro", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetStartEndDateForACI_Result>("spGetStartEndDateForACI", cMSYearParameter, tINParameter, nPIParameter, isGproParameter);
        }
    
        public virtual ObjectResult<spGetStartEndDateForIA_Result> spGetStartEndDateForIA(Nullable<int> cMSYear, string tIN, string nPI, Nullable<bool> isGpro)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("isGpro", isGpro) :
                new ObjectParameter("isGpro", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetStartEndDateForIA_Result>("spGetStartEndDateForIA", cMSYearParameter, tINParameter, nPIParameter, isGproParameter);
        }
    
        public virtual ObjectResult<spGetStartEndDateForIAorACI_Result> spGetStartEndDateForIAorACI(Nullable<bool> isIA, Nullable<int> selectionId)
        {
            var isIAParameter = isIA.HasValue ?
                new ObjectParameter("isIA", isIA) :
                new ObjectParameter("isIA", typeof(bool));
    
            var selectionIdParameter = selectionId.HasValue ?
                new ObjectParameter("SelectionId", selectionId) :
                new ObjectParameter("SelectionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetStartEndDateForIAorACI_Result>("spGetStartEndDateForIAorACI", isIAParameter, selectionIdParameter);
        }
    
        public virtual ObjectResult<string> spGetStartEndDateForTIN_TINNPIforXML(Nullable<bool> isTINonly, string exam_TIN, string physician_NPI, Nullable<int> cMS_Submission_Year, Nullable<bool> is90days)
        {
            var isTINonlyParameter = isTINonly.HasValue ?
                new ObjectParameter("isTINonly", isTINonly) :
                new ObjectParameter("isTINonly", typeof(bool));
    
            var exam_TINParameter = exam_TIN != null ?
                new ObjectParameter("Exam_TIN", exam_TIN) :
                new ObjectParameter("Exam_TIN", typeof(string));
    
            var physician_NPIParameter = physician_NPI != null ?
                new ObjectParameter("Physician_NPI", physician_NPI) :
                new ObjectParameter("Physician_NPI", typeof(string));
    
            var cMS_Submission_YearParameter = cMS_Submission_Year.HasValue ?
                new ObjectParameter("CMS_Submission_Year", cMS_Submission_Year) :
                new ObjectParameter("CMS_Submission_Year", typeof(int));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGetStartEndDateForTIN_TINNPIforXML", isTINonlyParameter, exam_TINParameter, physician_NPIParameter, cMS_Submission_YearParameter, is90daysParameter);
        }
    
        public virtual ObjectResult<string> SpGetSubmissionKeyForNonGproPatch(string tin, string npi, Nullable<int> cmsYear)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetSubmissionKeyForNonGproPatch", tinParameter, npiParameter, cmsYearParameter);
        }
    
        public virtual ObjectResult<string> SpGetSubmissionKeyForPatch(string tin, Nullable<int> cmsYear)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetSubmissionKeyForPatch", tinParameter, cmsYearParameter);
        }
    
        public virtual ObjectResult<SPGetSubmittoCMSTinsCount_Result> SPGetSubmittoCMSTinsCount(Nullable<int> cMSYear, string faciliyUserName, Nullable<int> userRole, string nPI)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var faciliyUserNameParameter = faciliyUserName != null ?
                new ObjectParameter("FaciliyUserName", faciliyUserName) :
                new ObjectParameter("FaciliyUserName", typeof(string));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(int));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetSubmittoCMSTinsCount_Result>("SPGetSubmittoCMSTinsCount", cMSYearParameter, faciliyUserNameParameter, userRoleParameter, nPIParameter);
        }
    
        public virtual ObjectResult<SpGetTinlevelAttesationDetailsOfUser_Result> SpGetTinlevelAttesationDetailsOfUser(Nullable<int> userId, Nullable<int> userRole, string nPI, Nullable<int> cMSYEAR)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(int));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var cMSYEARParameter = cMSYEAR.HasValue ?
                new ObjectParameter("CMSYEAR", cMSYEAR) :
                new ObjectParameter("CMSYEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetTinlevelAttesationDetailsOfUser_Result>("SpGetTinlevelAttesationDetailsOfUser", userIdParameter, userRoleParameter, nPIParameter, cMSYEARParameter);
        }
    
        public virtual ObjectResult<SPGetTINSbyNpi_Physician_VW_Result> SPGetTINSbyNpi_Physician_VW(string nPI)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetTINSbyNpi_Physician_VW_Result>("SPGetTINSbyNpi_Physician_VW", nPIParameter);
        }
    
        public virtual ObjectResult<string> spGetValidateNpi(string npi)
        {
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGetValidateNpi", npiParameter);
        }
    
        public virtual ObjectResult<string> spGetValidateTin(string tin)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGetValidateTin", tinParameter);
        }
    
        public virtual ObjectResult<spGproNonGproConversionLock_Result> spGproNonGproConversionLock(Nullable<int> cMSYear, string facilityuseranme)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var facilityuseranmeParameter = facilityuseranme != null ?
                new ObjectParameter("facilityuseranme", facilityuseranme) :
                new ObjectParameter("facilityuseranme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGproNonGproConversionLock_Result>("spGproNonGproConversionLock", cMSYearParameter, facilityuseranmeParameter);
        }
    
        public virtual ObjectResult<SPIA_Activitieslist_Result> SPIA_Activitieslist(Nullable<int> cMSYear, Nullable<int> category_Id, string tin, Nullable<bool> isGPRO, Nullable<int> userid, Nullable<int> roleId, string facilityusername)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("isGPRO", isGPRO) :
                new ObjectParameter("isGPRO", typeof(bool));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPIA_Activitieslist_Result>("SPIA_Activitieslist", cMSYearParameter, category_IdParameter, tinParameter, isGPROParameter, useridParameter, roleIdParameter, facilityusernameParameter);
        }
    
        public virtual ObjectResult<SPIA_FinalizeDetails_Result> SPIA_FinalizeDetails(Nullable<int> cMSYear, Nullable<int> category_Id, Nullable<int> role, string tin, string facilityusername, Nullable<int> userid)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPIA_FinalizeDetails_Result>("SPIA_FinalizeDetails", cMSYearParameter, category_IdParameter, roleParameter, tinParameter, facilityusernameParameter, useridParameter);
        }
    
        public virtual ObjectResult<SPIA_FinalizeDetails_Physician_Result> SPIA_FinalizeDetails_Physician(Nullable<int> cMSYear, Nullable<int> category_Id, Nullable<int> role, string npi)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPIA_FinalizeDetails_Physician_Result>("SPIA_FinalizeDetails_Physician", cMSYearParameter, category_IdParameter, roleParameter, npiParameter);
        }
    
        public virtual int SPInsert_Decrypted_PatientID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPInsert_Decrypted_PatientID");
        }
    
        public virtual int SPInsert_FileAccessFacilityLists(Nullable<int> fileID)
        {
            var fileIDParameter = fileID.HasValue ?
                new ObjectParameter("FileID", fileID) :
                new ObjectParameter("FileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPInsert_FileAccessFacilityLists", fileIDParameter);
        }
    
        public virtual int SpInsertACIAssestedMeasures(string tIN, Nullable<int> cMSYear, string userName, Nullable<bool> isGPRO, string nPI)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("isGPRO", isGPRO) :
                new ObjectParameter("isGPRO", typeof(bool));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpInsertACIAssestedMeasures", tINParameter, cMSYearParameter, userNameParameter, isGPROParameter, nPIParameter);
        }
    
        public virtual int spInsertFileRawData(string createdBy, Nullable<int> fileId)
        {
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertFileRawData", createdByParameter, fileIdParameter);
        }
    
        public virtual int SpInsertHitrustEventData(string eventData, Nullable<int> createdBy)
        {
            var eventDataParameter = eventData != null ?
                new ObjectParameter("EventData", eventData) :
                new ObjectParameter("EventData", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpInsertHitrustEventData", eventDataParameter, createdByParameter);
        }
    
        public virtual int SpInsertHitrustExceptionData(Nullable<int> userId, string exceptionType, string exceptionMessage)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var exceptionTypeParameter = exceptionType != null ?
                new ObjectParameter("ExceptionType", exceptionType) :
                new ObjectParameter("ExceptionType", typeof(string));
    
            var exceptionMessageParameter = exceptionMessage != null ?
                new ObjectParameter("ExceptionMessage", exceptionMessage) :
                new ObjectParameter("ExceptionMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpInsertHitrustExceptionData", userIdParameter, exceptionTypeParameter, exceptionMessageParameter);
        }
    
        public virtual int spInsertIndividualInvalidDataForACIXML(string tin, string npi, Nullable<int> cmsYear, string measureId)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var measureIdParameter = measureId != null ?
                new ObjectParameter("measureId", measureId) :
                new ObjectParameter("measureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertIndividualInvalidDataForACIXML", tinParameter, npiParameter, cmsYearParameter, measureIdParameter);
        }
    
        public virtual int spInsertTinInvalidDataForACIXML(string tin, Nullable<int> cmsYear, string measureId)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var measureIdParameter = measureId != null ?
                new ObjectParameter("measureId", measureId) :
                new ObjectParameter("measureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertTinInvalidDataForACIXML", tinParameter, cmsYearParameter, measureIdParameter);
        }
    
        public virtual int spInsertUpdate_ACI_FinalizeData(string tin, string npi, Nullable<bool> isGpro, Nullable<int> cMSYear, Nullable<bool> isFinalize, Nullable<int> createBy, Nullable<System.DateTime> createddate, Nullable<int> modifiedBy, Nullable<System.DateTime> modifiedDate, Nullable<bool> isTinLock, string email, Nullable<System.DateTime> finalizeAgreeTime, Nullable<System.DateTime> finalizeDisAgreeTime)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("isGpro", isGpro) :
                new ObjectParameter("isGpro", typeof(bool));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isFinalizeParameter = isFinalize.HasValue ?
                new ObjectParameter("isFinalize", isFinalize) :
                new ObjectParameter("isFinalize", typeof(bool));
    
            var createByParameter = createBy.HasValue ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(int));
    
            var createddateParameter = createddate.HasValue ?
                new ObjectParameter("Createddate", createddate) :
                new ObjectParameter("Createddate", typeof(System.DateTime));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var isTinLockParameter = isTinLock.HasValue ?
                new ObjectParameter("isTinLock", isTinLock) :
                new ObjectParameter("isTinLock", typeof(bool));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var finalizeAgreeTimeParameter = finalizeAgreeTime.HasValue ?
                new ObjectParameter("finalizeAgreeTime", finalizeAgreeTime) :
                new ObjectParameter("finalizeAgreeTime", typeof(System.DateTime));
    
            var finalizeDisAgreeTimeParameter = finalizeDisAgreeTime.HasValue ?
                new ObjectParameter("finalizeDisAgreeTime", finalizeDisAgreeTime) :
                new ObjectParameter("finalizeDisAgreeTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertUpdate_ACI_FinalizeData", tinParameter, npiParameter, isGproParameter, cMSYearParameter, isFinalizeParameter, createByParameter, createddateParameter, modifiedByParameter, modifiedDateParameter, isTinLockParameter, emailParameter, finalizeAgreeTimeParameter, finalizeDisAgreeTimeParameter);
        }
    
        public virtual int spInsertUpdate_IA_FinalizeData(string tin, string npi, Nullable<bool> isGpro, Nullable<int> cMSYear, Nullable<bool> isFinalize, Nullable<int> createBy, Nullable<System.DateTime> createddate, Nullable<int> modifiedBy, Nullable<System.DateTime> modifiedDate, Nullable<bool> isTinLock, string email, Nullable<System.DateTime> finalizeAgreeTime, Nullable<System.DateTime> finalizeDisAgreeTime)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("isGpro", isGpro) :
                new ObjectParameter("isGpro", typeof(bool));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isFinalizeParameter = isFinalize.HasValue ?
                new ObjectParameter("isFinalize", isFinalize) :
                new ObjectParameter("isFinalize", typeof(bool));
    
            var createByParameter = createBy.HasValue ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(int));
    
            var createddateParameter = createddate.HasValue ?
                new ObjectParameter("Createddate", createddate) :
                new ObjectParameter("Createddate", typeof(System.DateTime));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var isTinLockParameter = isTinLock.HasValue ?
                new ObjectParameter("isTinLock", isTinLock) :
                new ObjectParameter("isTinLock", typeof(bool));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var finalizeAgreeTimeParameter = finalizeAgreeTime.HasValue ?
                new ObjectParameter("finalizeAgreeTime", finalizeAgreeTime) :
                new ObjectParameter("finalizeAgreeTime", typeof(System.DateTime));
    
            var finalizeDisAgreeTimeParameter = finalizeDisAgreeTime.HasValue ?
                new ObjectParameter("finalizeDisAgreeTime", finalizeDisAgreeTime) :
                new ObjectParameter("finalizeDisAgreeTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertUpdate_IA_FinalizeData", tinParameter, npiParameter, isGproParameter, cMSYearParameter, isFinalizeParameter, createByParameter, createddateParameter, modifiedByParameter, modifiedDateParameter, isTinLockParameter, emailParameter, finalizeAgreeTimeParameter, finalizeDisAgreeTimeParameter);
        }
    
        public virtual int spInsertUpdate_QM_FinalizeData(string tin, string npi, Nullable<bool> isGpro, Nullable<int> cMSYear, Nullable<bool> isFinalize, Nullable<int> createBy, Nullable<System.DateTime> createddate, Nullable<int> modifiedBy, Nullable<System.DateTime> modifiedDate, Nullable<bool> isTinLock, string email, Nullable<System.DateTime> finalizeAgreeTime, Nullable<System.DateTime> finalizeDisAgreeTime)
        {
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var isGproParameter = isGpro.HasValue ?
                new ObjectParameter("isGpro", isGpro) :
                new ObjectParameter("isGpro", typeof(bool));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isFinalizeParameter = isFinalize.HasValue ?
                new ObjectParameter("isFinalize", isFinalize) :
                new ObjectParameter("isFinalize", typeof(bool));
    
            var createByParameter = createBy.HasValue ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(int));
    
            var createddateParameter = createddate.HasValue ?
                new ObjectParameter("Createddate", createddate) :
                new ObjectParameter("Createddate", typeof(System.DateTime));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var isTinLockParameter = isTinLock.HasValue ?
                new ObjectParameter("isTinLock", isTinLock) :
                new ObjectParameter("isTinLock", typeof(bool));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var finalizeAgreeTimeParameter = finalizeAgreeTime.HasValue ?
                new ObjectParameter("finalizeAgreeTime", finalizeAgreeTime) :
                new ObjectParameter("finalizeAgreeTime", typeof(System.DateTime));
    
            var finalizeDisAgreeTimeParameter = finalizeDisAgreeTime.HasValue ?
                new ObjectParameter("finalizeDisAgreeTime", finalizeDisAgreeTime) :
                new ObjectParameter("finalizeDisAgreeTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertUpdate_QM_FinalizeData", tinParameter, npiParameter, isGproParameter, cMSYearParameter, isFinalizeParameter, createByParameter, createddateParameter, modifiedByParameter, modifiedDateParameter, isTinLockParameter, emailParameter, finalizeAgreeTimeParameter, finalizeDisAgreeTimeParameter);
        }
    
        public virtual int SPInsertUpdateExamsData(Nullable<int> fileId, Nullable<int> uploadUserId, string partnerID, Nullable<int> dataSource_Id, string created_By, Nullable<int> status, Nullable<int> reqId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var uploadUserIdParameter = uploadUserId.HasValue ?
                new ObjectParameter("UploadUserId", uploadUserId) :
                new ObjectParameter("UploadUserId", typeof(int));
    
            var partnerIDParameter = partnerID != null ?
                new ObjectParameter("PartnerID", partnerID) :
                new ObjectParameter("PartnerID", typeof(string));
    
            var dataSource_IdParameter = dataSource_Id.HasValue ?
                new ObjectParameter("DataSource_Id", dataSource_Id) :
                new ObjectParameter("DataSource_Id", typeof(int));
    
            var created_ByParameter = created_By != null ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("ReqId", reqId) :
                new ObjectParameter("ReqId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPInsertUpdateExamsData", fileIdParameter, uploadUserIdParameter, partnerIDParameter, dataSource_IdParameter, created_ByParameter, statusParameter, reqIdParameter);
        }
    
        public virtual int SPInsertUpdateImportExamsData(string transaction_ID, string transaction_DateTime, string num_of_exams_Included, string partnerId, string appid, string facility_Id, string prev_Transction_ID, string rawData_Id, Nullable<int> import_Status)
        {
            var transaction_IDParameter = transaction_ID != null ?
                new ObjectParameter("Transaction_ID", transaction_ID) :
                new ObjectParameter("Transaction_ID", typeof(string));
    
            var transaction_DateTimeParameter = transaction_DateTime != null ?
                new ObjectParameter("Transaction_DateTime", transaction_DateTime) :
                new ObjectParameter("Transaction_DateTime", typeof(string));
    
            var num_of_exams_IncludedParameter = num_of_exams_Included != null ?
                new ObjectParameter("Num_of_exams_Included", num_of_exams_Included) :
                new ObjectParameter("Num_of_exams_Included", typeof(string));
    
            var partnerIdParameter = partnerId != null ?
                new ObjectParameter("PartnerId", partnerId) :
                new ObjectParameter("PartnerId", typeof(string));
    
            var appidParameter = appid != null ?
                new ObjectParameter("Appid", appid) :
                new ObjectParameter("Appid", typeof(string));
    
            var facility_IdParameter = facility_Id != null ?
                new ObjectParameter("Facility_Id", facility_Id) :
                new ObjectParameter("Facility_Id", typeof(string));
    
            var prev_Transction_IDParameter = prev_Transction_ID != null ?
                new ObjectParameter("Prev_Transction_ID", prev_Transction_ID) :
                new ObjectParameter("Prev_Transction_ID", typeof(string));
    
            var rawData_IdParameter = rawData_Id != null ?
                new ObjectParameter("RawData_Id", rawData_Id) :
                new ObjectParameter("RawData_Id", typeof(string));
    
            var import_StatusParameter = import_Status.HasValue ?
                new ObjectParameter("Import_Status", import_Status) :
                new ObjectParameter("Import_Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPInsertUpdateImportExamsData", transaction_IDParameter, transaction_DateTimeParameter, num_of_exams_IncludedParameter, partnerIdParameter, appidParameter, facility_IdParameter, prev_Transction_IDParameter, rawData_IdParameter, import_StatusParameter);
        }
    
        public virtual int SpInsertUserAttestData(Nullable<int> userId, string nPI, Nullable<int> userRole, Nullable<int> cMSYEAR, string uSERMAIL)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("UserRole", userRole) :
                new ObjectParameter("UserRole", typeof(int));
    
            var cMSYEARParameter = cMSYEAR.HasValue ?
                new ObjectParameter("CMSYEAR", cMSYEAR) :
                new ObjectParameter("CMSYEAR", typeof(int));
    
            var uSERMAILParameter = uSERMAIL != null ?
                new ObjectParameter("USERMAIL", uSERMAIL) :
                new ObjectParameter("USERMAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpInsertUserAttestData", userIdParameter, nPIParameter, userRoleParameter, cMSYEARParameter, uSERMAILParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SpIs_ResetButtonEnable(Nullable<int> fileID, Nullable<int> reqID)
        {
            var fileIDParameter = fileID.HasValue ?
                new ObjectParameter("FileID", fileID) :
                new ObjectParameter("FileID", typeof(int));
    
            var reqIDParameter = reqID.HasValue ?
                new ObjectParameter("ReqID", reqID) :
                new ObjectParameter("ReqID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SpIs_ResetButtonEnable", fileIDParameter, reqIDParameter);
        }
    
        public virtual ObjectResult<spLockPendingFilesforExamAPI_Result> spLockPendingFilesforExamAPI(string excelFilename)
        {
            var excelFilenameParameter = excelFilename != null ?
                new ObjectParameter("excelFilename", excelFilename) :
                new ObjectParameter("excelFilename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLockPendingFilesforExamAPI_Result>("spLockPendingFilesforExamAPI", excelFilenameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spMeasureDataExists(string physicianNPI, string examTIN, string patient_Id, string decryptPatient_Id, string measure_Num, string procedure_Code, Nullable<bool> isEncrypt, Nullable<System.DateTime> exam_Date, Nullable<int> cMS_Submission_Year, string exam_Unique_ID, string criteria, string denom_Diag_Code, string numerator_Code)
        {
            var physicianNPIParameter = physicianNPI != null ?
                new ObjectParameter("PhysicianNPI", physicianNPI) :
                new ObjectParameter("PhysicianNPI", typeof(string));
    
            var examTINParameter = examTIN != null ?
                new ObjectParameter("ExamTIN", examTIN) :
                new ObjectParameter("ExamTIN", typeof(string));
    
            var patient_IdParameter = patient_Id != null ?
                new ObjectParameter("Patient_Id", patient_Id) :
                new ObjectParameter("Patient_Id", typeof(string));
    
            var decryptPatient_IdParameter = decryptPatient_Id != null ?
                new ObjectParameter("DecryptPatient_Id", decryptPatient_Id) :
                new ObjectParameter("DecryptPatient_Id", typeof(string));
    
            var measure_NumParameter = measure_Num != null ?
                new ObjectParameter("Measure_Num", measure_Num) :
                new ObjectParameter("Measure_Num", typeof(string));
    
            var procedure_CodeParameter = procedure_Code != null ?
                new ObjectParameter("Procedure_Code", procedure_Code) :
                new ObjectParameter("Procedure_Code", typeof(string));
    
            var isEncryptParameter = isEncrypt.HasValue ?
                new ObjectParameter("IsEncrypt", isEncrypt) :
                new ObjectParameter("IsEncrypt", typeof(bool));
    
            var exam_DateParameter = exam_Date.HasValue ?
                new ObjectParameter("Exam_Date", exam_Date) :
                new ObjectParameter("Exam_Date", typeof(System.DateTime));
    
            var cMS_Submission_YearParameter = cMS_Submission_Year.HasValue ?
                new ObjectParameter("CMS_Submission_Year", cMS_Submission_Year) :
                new ObjectParameter("CMS_Submission_Year", typeof(int));
    
            var exam_Unique_IDParameter = exam_Unique_ID != null ?
                new ObjectParameter("Exam_Unique_ID", exam_Unique_ID) :
                new ObjectParameter("Exam_Unique_ID", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var denom_Diag_CodeParameter = denom_Diag_Code != null ?
                new ObjectParameter("Denom_Diag_Code", denom_Diag_Code) :
                new ObjectParameter("Denom_Diag_Code", typeof(string));
    
            var numerator_CodeParameter = numerator_Code != null ?
                new ObjectParameter("Numerator_Code", numerator_Code) :
                new ObjectParameter("Numerator_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spMeasureDataExists", physicianNPIParameter, examTINParameter, patient_IdParameter, decryptPatient_IdParameter, measure_NumParameter, procedure_CodeParameter, isEncryptParameter, exam_DateParameter, cMS_Submission_YearParameter, exam_Unique_IDParameter, criteriaParameter, denom_Diag_CodeParameter, numerator_CodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spMeasureDataExistsForManualData(string physicianNPI, string examTIN, string patient_Id, string decryptPatient_Id, string measure_Num, string procedure_Code, Nullable<bool> isEncrypt, Nullable<System.DateTime> exam_Date, Nullable<int> cMS_Submission_Year, string exam_Unique_ID, string criteria, string denom_Diag_Code, string numerator_Code)
        {
            var physicianNPIParameter = physicianNPI != null ?
                new ObjectParameter("PhysicianNPI", physicianNPI) :
                new ObjectParameter("PhysicianNPI", typeof(string));
    
            var examTINParameter = examTIN != null ?
                new ObjectParameter("ExamTIN", examTIN) :
                new ObjectParameter("ExamTIN", typeof(string));
    
            var patient_IdParameter = patient_Id != null ?
                new ObjectParameter("Patient_Id", patient_Id) :
                new ObjectParameter("Patient_Id", typeof(string));
    
            var decryptPatient_IdParameter = decryptPatient_Id != null ?
                new ObjectParameter("DecryptPatient_Id", decryptPatient_Id) :
                new ObjectParameter("DecryptPatient_Id", typeof(string));
    
            var measure_NumParameter = measure_Num != null ?
                new ObjectParameter("Measure_Num", measure_Num) :
                new ObjectParameter("Measure_Num", typeof(string));
    
            var procedure_CodeParameter = procedure_Code != null ?
                new ObjectParameter("Procedure_Code", procedure_Code) :
                new ObjectParameter("Procedure_Code", typeof(string));
    
            var isEncryptParameter = isEncrypt.HasValue ?
                new ObjectParameter("IsEncrypt", isEncrypt) :
                new ObjectParameter("IsEncrypt", typeof(bool));
    
            var exam_DateParameter = exam_Date.HasValue ?
                new ObjectParameter("Exam_Date", exam_Date) :
                new ObjectParameter("Exam_Date", typeof(System.DateTime));
    
            var cMS_Submission_YearParameter = cMS_Submission_Year.HasValue ?
                new ObjectParameter("CMS_Submission_Year", cMS_Submission_Year) :
                new ObjectParameter("CMS_Submission_Year", typeof(int));
    
            var exam_Unique_IDParameter = exam_Unique_ID != null ?
                new ObjectParameter("Exam_Unique_ID", exam_Unique_ID) :
                new ObjectParameter("Exam_Unique_ID", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var denom_Diag_CodeParameter = denom_Diag_Code != null ?
                new ObjectParameter("Denom_Diag_Code", denom_Diag_Code) :
                new ObjectParameter("Denom_Diag_Code", typeof(string));
    
            var numerator_CodeParameter = numerator_Code != null ?
                new ObjectParameter("Numerator_Code", numerator_Code) :
                new ObjectParameter("Numerator_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spMeasureDataExistsForManualData", physicianNPIParameter, examTINParameter, patient_IdParameter, decryptPatient_IdParameter, measure_NumParameter, procedure_CodeParameter, isEncryptParameter, exam_DateParameter, cMS_Submission_YearParameter, exam_Unique_IDParameter, criteriaParameter, denom_Diag_CodeParameter, numerator_CodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SPMerge_Delete_NPI_tbl_Users(string nPI)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SPMerge_Delete_NPI_tbl_Users", nPIParameter);
        }
    
        public virtual int spMigrated_Exam_split_Duplicate_measures(Nullable<int> tbl_Exam_ExamID, Nullable<int> import_examID)
        {
            var tbl_Exam_ExamIDParameter = tbl_Exam_ExamID.HasValue ?
                new ObjectParameter("tbl_Exam_ExamID", tbl_Exam_ExamID) :
                new ObjectParameter("tbl_Exam_ExamID", typeof(int));
    
            var import_examIDParameter = import_examID.HasValue ?
                new ObjectParameter("Import_examID", import_examID) :
                new ObjectParameter("Import_examID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMigrated_Exam_split_Duplicate_measures", tbl_Exam_ExamIDParameter, import_examIDParameter);
        }
    
        public virtual int spMigrateExamMeasureData(Nullable<int> newExamID, Nullable<int> import_ExamID, Nullable<System.DateTime> transaction_datetime)
        {
            var newExamIDParameter = newExamID.HasValue ?
                new ObjectParameter("NewExamID", newExamID) :
                new ObjectParameter("NewExamID", typeof(int));
    
            var import_ExamIDParameter = import_ExamID.HasValue ?
                new ObjectParameter("Import_ExamID", import_ExamID) :
                new ObjectParameter("Import_ExamID", typeof(int));
    
            var transaction_datetimeParameter = transaction_datetime.HasValue ?
                new ObjectParameter("transaction_datetime", transaction_datetime) :
                new ObjectParameter("transaction_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMigrateExamMeasureData", newExamIDParameter, import_ExamIDParameter, transaction_datetimeParameter);
        }
    
        public virtual int spMigrateExamMeasureDataExtension(Nullable<int> newMeasure_Data_Id, Nullable<int> import_measuredata_ID)
        {
            var newMeasure_Data_IdParameter = newMeasure_Data_Id.HasValue ?
                new ObjectParameter("NewMeasure_Data_Id", newMeasure_Data_Id) :
                new ObjectParameter("NewMeasure_Data_Id", typeof(int));
    
            var import_measuredata_IDParameter = import_measuredata_ID.HasValue ?
                new ObjectParameter("Import_measuredata_ID", import_measuredata_ID) :
                new ObjectParameter("Import_measuredata_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMigrateExamMeasureDataExtension", newMeasure_Data_IdParameter, import_measuredata_IDParameter);
        }
    
        public virtual int spMigrateImportData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMigrateImportData");
        }
    
        public virtual ObjectResult<spNPIMeasureRelatedmeasureDataFor90Days_Result> spNPIMeasureRelatedmeasureDataFor90Days(Nullable<int> cmsyear, string npi, string tIN, Nullable<bool> is90days, string measure_Num)
        {
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("cmsyear", cmsyear) :
                new ObjectParameter("cmsyear", typeof(int));
    
            var npiParameter = npi != null ?
                new ObjectParameter("npi", npi) :
                new ObjectParameter("npi", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            var measure_NumParameter = measure_Num != null ?
                new ObjectParameter("Measure_Num", measure_Num) :
                new ObjectParameter("Measure_Num", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNPIMeasureRelatedmeasureDataFor90Days_Result>("spNPIMeasureRelatedmeasureDataFor90Days", cmsyearParameter, npiParameter, tINParameter, is90daysParameter, measure_NumParameter);
        }
    
        public virtual ObjectResult<spNPIMeasureRelatedmeasureDataForFullYear_Result> spNPIMeasureRelatedmeasureDataForFullYear(Nullable<int> cmsyear, string npi, string tIN, Nullable<bool> is90days, string measure_Num)
        {
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("cmsyear", cmsyear) :
                new ObjectParameter("cmsyear", typeof(int));
    
            var npiParameter = npi != null ?
                new ObjectParameter("npi", npi) :
                new ObjectParameter("npi", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            var measure_NumParameter = measure_Num != null ?
                new ObjectParameter("Measure_Num", measure_Num) :
                new ObjectParameter("Measure_Num", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNPIMeasureRelatedmeasureDataForFullYear_Result>("spNPIMeasureRelatedmeasureDataForFullYear", cmsyearParameter, npiParameter, tINParameter, is90daysParameter, measure_NumParameter);
        }
    
        public virtual ObjectResult<spNPIRelatedmeasureData_Result> spNPIRelatedmeasureData(Nullable<int> cmsyear, string npi, string tIN, Nullable<bool> isExport, Nullable<bool> is90days, string measure_Num)
        {
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("cmsyear", cmsyear) :
                new ObjectParameter("cmsyear", typeof(int));
    
            var npiParameter = npi != null ?
                new ObjectParameter("npi", npi) :
                new ObjectParameter("npi", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            var measure_NumParameter = measure_Num != null ?
                new ObjectParameter("Measure_Num", measure_Num) :
                new ObjectParameter("Measure_Num", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNPIRelatedmeasureData_Result>("spNPIRelatedmeasureData", cmsyearParameter, npiParameter, tINParameter, isExportParameter, is90daysParameter, measure_NumParameter);
        }
    
        public virtual ObjectResult<spNPIRelatedMeasureDataFor90days_Result> spNPIRelatedMeasureDataFor90days(string tIN, string nPI, Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNPIRelatedMeasureDataFor90days_Result>("spNPIRelatedMeasureDataFor90days", tINParameter, nPIParameter, cMSYearParameter, isExportParameter);
        }
    
        public virtual ObjectResult<spNPIRelatedMeasureDataForFullYear_Result> spNPIRelatedMeasureDataForFullYear(string tIN, string nPI, Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNPIRelatedMeasureDataForFullYear_Result>("spNPIRelatedMeasureDataForFullYear", tINParameter, nPIParameter, cMSYearParameter, isExportParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spPhsicianTinNpiLevelQMFinalizationValidation(string tIN, string npi, Nullable<int> cMSYear, Nullable<bool> is90days)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spPhsicianTinNpiLevelQMFinalizationValidation", tINParameter, npiParameter, cMSYearParameter, is90daysParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spPhysicianTinNpiLevelIAFinalizationValidation(string tIN, string npi, Nullable<int> cMSYear)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spPhysicianTinNpiLevelIAFinalizationValidation", tINParameter, npiParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<SPPI_Activitieslist_Result> SPPI_Activitieslist(Nullable<int> cMSYear, Nullable<int> category_Id, string tin, Nullable<bool> isGPRO, Nullable<int> userid, Nullable<int> roleId, string facilityusername)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("isGPRO", isGPRO) :
                new ObjectParameter("isGPRO", typeof(bool));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPPI_Activitieslist_Result>("SPPI_Activitieslist", cMSYearParameter, category_IdParameter, tinParameter, isGPROParameter, useridParameter, roleIdParameter, facilityusernameParameter);
        }
    
        public virtual ObjectResult<SPPI_FinalizeDetails_Result> SPPI_FinalizeDetails(Nullable<int> cMSYear, Nullable<int> category_Id, Nullable<int> role, string tin, string facilityusername, Nullable<int> userid)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPPI_FinalizeDetails_Result>("SPPI_FinalizeDetails", cMSYearParameter, category_IdParameter, roleParameter, tinParameter, facilityusernameParameter, useridParameter);
        }
    
        public virtual ObjectResult<SPPI_FinalizeDetails_Physician_Result> SPPI_FinalizeDetails_Physician(Nullable<int> cMSYear, Nullable<int> category_Id, Nullable<int> role, string npi)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPPI_FinalizeDetails_Physician_Result>("SPPI_FinalizeDetails_Physician", cMSYearParameter, category_IdParameter, roleParameter, npiParameter);
        }
    
        public virtual ObjectResult<SPQM_FacilityPhyFinalizeDetails_Result> SPQM_FacilityPhyFinalizeDetails(Nullable<int> cMSYear, Nullable<int> category_Id, string tin, Nullable<bool> isGPRO, Nullable<int> userid, Nullable<int> roleId, string facilityusername)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var isGPROParameter = isGPRO.HasValue ?
                new ObjectParameter("isGPRO", isGPRO) :
                new ObjectParameter("isGPRO", typeof(bool));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPQM_FacilityPhyFinalizeDetails_Result>("SPQM_FacilityPhyFinalizeDetails", cMSYearParameter, category_IdParameter, tinParameter, isGPROParameter, useridParameter, roleIdParameter, facilityusernameParameter);
        }
    
        public virtual ObjectResult<SPQM_FinalizeDetails_Result> SPQM_FinalizeDetails(Nullable<int> cMSYear, Nullable<int> category_Id, Nullable<int> role, string tin, string facilityusername, Nullable<int> userid)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            var facilityusernameParameter = facilityusername != null ?
                new ObjectParameter("facilityusername", facilityusername) :
                new ObjectParameter("facilityusername", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPQM_FinalizeDetails_Result>("SPQM_FinalizeDetails", cMSYearParameter, category_IdParameter, roleParameter, tinParameter, facilityusernameParameter, useridParameter);
        }
    
        public virtual ObjectResult<SPQM_FinalizeDetails_Physician_Result> SPQM_FinalizeDetails_Physician(Nullable<int> cMSYear, Nullable<int> category_Id, Nullable<int> role, string npi)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPQM_FinalizeDetails_Physician_Result>("SPQM_FinalizeDetails_Physician", cMSYearParameter, category_IdParameter, roleParameter, npiParameter);
        }
    
        public virtual int SpQMSaveAllMeasureData(string tIN, string nPI, Nullable<bool> iS_GPRO, Nullable<bool> iS_90Days, Nullable<int> cMSYear, Nullable<int> userId)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var iS_GPROParameter = iS_GPRO.HasValue ?
                new ObjectParameter("IS_GPRO", iS_GPRO) :
                new ObjectParameter("IS_GPRO", typeof(bool));
    
            var iS_90DaysParameter = iS_90Days.HasValue ?
                new ObjectParameter("IS_90Days", iS_90Days) :
                new ObjectParameter("IS_90Days", typeof(bool));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpQMSaveAllMeasureData", tINParameter, nPIParameter, iS_GPROParameter, iS_90DaysParameter, cMSYearParameter, userIdParameter);
        }
    
        public virtual int spReCalculate_Measure143ForPhy(string nPI, string tIN, Nullable<int> intCurActiveYear, string strMeasure_num, Nullable<bool> blnGPRO)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strMeasure_numParameter = strMeasure_num != null ?
                new ObjectParameter("strMeasure_num", strMeasure_num) :
                new ObjectParameter("strMeasure_num", typeof(string));
    
            var blnGPROParameter = blnGPRO.HasValue ?
                new ObjectParameter("blnGPRO", blnGPRO) :
                new ObjectParameter("blnGPRO", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_Measure143ForPhy", nPIParameter, tINParameter, intCurActiveYearParameter, strMeasure_numParameter, blnGPROParameter);
        }
    
        public virtual int spReCalculate_Measure143ForTin(string strCurTIN, Nullable<int> intCurActiveYear, string strMeasure_num, Nullable<bool> blnGPRO, Nullable<bool> isReqFromShedular)
        {
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strMeasure_numParameter = strMeasure_num != null ?
                new ObjectParameter("strMeasure_num", strMeasure_num) :
                new ObjectParameter("strMeasure_num", typeof(string));
    
            var blnGPROParameter = blnGPRO.HasValue ?
                new ObjectParameter("blnGPRO", blnGPRO) :
                new ObjectParameter("blnGPRO", typeof(bool));
    
            var isReqFromShedularParameter = isReqFromShedular.HasValue ?
                new ObjectParameter("isReqFromShedular", isReqFromShedular) :
                new ObjectParameter("isReqFromShedular", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_Measure143ForTin", strCurTINParameter, intCurActiveYearParameter, strMeasure_numParameter, blnGPROParameter, isReqFromShedularParameter);
        }
    
        public virtual int spReCalculate_Measure226ForPhy(string nPI, string tIN, Nullable<int> intCurActiveYear, string strMeasure_num, Nullable<bool> blnGPRO, Nullable<bool> isReqFromShedular)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strMeasure_numParameter = strMeasure_num != null ?
                new ObjectParameter("strMeasure_num", strMeasure_num) :
                new ObjectParameter("strMeasure_num", typeof(string));
    
            var blnGPROParameter = blnGPRO.HasValue ?
                new ObjectParameter("blnGPRO", blnGPRO) :
                new ObjectParameter("blnGPRO", typeof(bool));
    
            var isReqFromShedularParameter = isReqFromShedular.HasValue ?
                new ObjectParameter("isReqFromShedular", isReqFromShedular) :
                new ObjectParameter("isReqFromShedular", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_Measure226ForPhy", nPIParameter, tINParameter, intCurActiveYearParameter, strMeasure_numParameter, blnGPROParameter, isReqFromShedularParameter);
        }
    
        public virtual int spReCalculate_Measure226ForPhy90Days(string nPI, string tIN, Nullable<int> intCurActiveYear, string strMeasure_num, Nullable<bool> blnGPRO, Nullable<bool> isReqFromShedular)
        {
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strMeasure_numParameter = strMeasure_num != null ?
                new ObjectParameter("strMeasure_num", strMeasure_num) :
                new ObjectParameter("strMeasure_num", typeof(string));
    
            var blnGPROParameter = blnGPRO.HasValue ?
                new ObjectParameter("blnGPRO", blnGPRO) :
                new ObjectParameter("blnGPRO", typeof(bool));
    
            var isReqFromShedularParameter = isReqFromShedular.HasValue ?
                new ObjectParameter("isReqFromShedular", isReqFromShedular) :
                new ObjectParameter("isReqFromShedular", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_Measure226ForPhy90Days", nPIParameter, tINParameter, intCurActiveYearParameter, strMeasure_numParameter, blnGPROParameter, isReqFromShedularParameter);
        }
    
        public virtual int spReCalculate_Measure226ForTin(string strCurTIN, Nullable<int> intCurActiveYear, string strMeasure_num, Nullable<bool> blnGPRO, Nullable<bool> isReqFromShedular)
        {
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strMeasure_numParameter = strMeasure_num != null ?
                new ObjectParameter("strMeasure_num", strMeasure_num) :
                new ObjectParameter("strMeasure_num", typeof(string));
    
            var blnGPROParameter = blnGPRO.HasValue ?
                new ObjectParameter("blnGPRO", blnGPRO) :
                new ObjectParameter("blnGPRO", typeof(bool));
    
            var isReqFromShedularParameter = isReqFromShedular.HasValue ?
                new ObjectParameter("isReqFromShedular", isReqFromShedular) :
                new ObjectParameter("isReqFromShedular", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_Measure226ForTin", strCurTINParameter, intCurActiveYearParameter, strMeasure_numParameter, blnGPROParameter, isReqFromShedularParameter);
        }
    
        public virtual int spReCalculate_Measure226ForTin90Days(string strCurTIN, Nullable<int> intCurActiveYear, string strMeasure_num, Nullable<bool> blnGPRO, Nullable<bool> isReqFromShedular)
        {
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strMeasure_numParameter = strMeasure_num != null ?
                new ObjectParameter("strMeasure_num", strMeasure_num) :
                new ObjectParameter("strMeasure_num", typeof(string));
    
            var blnGPROParameter = blnGPRO.HasValue ?
                new ObjectParameter("blnGPRO", blnGPRO) :
                new ObjectParameter("blnGPRO", typeof(bool));
    
            var isReqFromShedularParameter = isReqFromShedular.HasValue ?
                new ObjectParameter("isReqFromShedular", isReqFromShedular) :
                new ObjectParameter("isReqFromShedular", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_Measure226ForTin90Days", strCurTINParameter, intCurActiveYearParameter, strMeasure_numParameter, blnGPROParameter, isReqFromShedularParameter);
        }
    
        public virtual int spReCalculate_Measure409ForPhy(Nullable<int> intYear, string strPhysicianNPI, string strTIN)
        {
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var strPhysicianNPIParameter = strPhysicianNPI != null ?
                new ObjectParameter("strPhysicianNPI", strPhysicianNPI) :
                new ObjectParameter("strPhysicianNPI", typeof(string));
    
            var strTINParameter = strTIN != null ?
                new ObjectParameter("strTIN", strTIN) :
                new ObjectParameter("strTIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_Measure409ForPhy", intYearParameter, strPhysicianNPIParameter, strTINParameter);
        }
    
        public virtual int spReCalculate_Measure409ForTin(Nullable<int> intYear, string strTIN)
        {
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var strTINParameter = strTIN != null ?
                new ObjectParameter("strTIN", strTIN) :
                new ObjectParameter("strTIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_Measure409ForTin", intYearParameter, strTINParameter);
        }
    
        public virtual int spReCalculate_PapulatePhyAggrTblForTinofNPIS(string strCurMeasure_num, string strCurTIN, Nullable<int> intCurActiveYear, Nullable<bool> is_90Days)
        {
            var strCurMeasure_numParameter = strCurMeasure_num != null ?
                new ObjectParameter("strCurMeasure_num", strCurMeasure_num) :
                new ObjectParameter("strCurMeasure_num", typeof(string));
    
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var is_90DaysParameter = is_90Days.HasValue ?
                new ObjectParameter("Is_90Days", is_90Days) :
                new ObjectParameter("Is_90Days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_PapulatePhyAggrTblForTinofNPIS", strCurMeasure_numParameter, strCurTINParameter, intCurActiveYearParameter, is_90DaysParameter);
        }
    
        public virtual int spReCalculate_StratumCalbyAgeforPhy(Nullable<int> intCurActiveYear, string strCurNPI, string strCurTIN, Nullable<int> intCurMeasureId, string strMeasure_num, Nullable<bool> blnGPRO)
        {
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strCurNPIParameter = strCurNPI != null ?
                new ObjectParameter("strCurNPI", strCurNPI) :
                new ObjectParameter("strCurNPI", typeof(string));
    
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var intCurMeasureIdParameter = intCurMeasureId.HasValue ?
                new ObjectParameter("intCurMeasureId", intCurMeasureId) :
                new ObjectParameter("intCurMeasureId", typeof(int));
    
            var strMeasure_numParameter = strMeasure_num != null ?
                new ObjectParameter("strMeasure_num", strMeasure_num) :
                new ObjectParameter("strMeasure_num", typeof(string));
    
            var blnGPROParameter = blnGPRO.HasValue ?
                new ObjectParameter("blnGPRO", blnGPRO) :
                new ObjectParameter("blnGPRO", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_StratumCalbyAgeforPhy", intCurActiveYearParameter, strCurNPIParameter, strCurTINParameter, intCurMeasureIdParameter, strMeasure_numParameter, blnGPROParameter);
        }
    
        public virtual int spReCalculate_StratumCalbyAgeforPhy90Days(Nullable<int> intCurActiveYear, string strCurNPI, string strCurTIN, Nullable<int> intCurMeasureId, string strMeasure_num, Nullable<bool> blnGPRO)
        {
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strCurNPIParameter = strCurNPI != null ?
                new ObjectParameter("strCurNPI", strCurNPI) :
                new ObjectParameter("strCurNPI", typeof(string));
    
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var intCurMeasureIdParameter = intCurMeasureId.HasValue ?
                new ObjectParameter("intCurMeasureId", intCurMeasureId) :
                new ObjectParameter("intCurMeasureId", typeof(int));
    
            var strMeasure_numParameter = strMeasure_num != null ?
                new ObjectParameter("strMeasure_num", strMeasure_num) :
                new ObjectParameter("strMeasure_num", typeof(string));
    
            var blnGPROParameter = blnGPRO.HasValue ?
                new ObjectParameter("blnGPRO", blnGPRO) :
                new ObjectParameter("blnGPRO", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_StratumCalbyAgeforPhy90Days", intCurActiveYearParameter, strCurNPIParameter, strCurTINParameter, intCurMeasureIdParameter, strMeasure_numParameter, blnGPROParameter);
        }
    
        public virtual int spReCalculate_StratumCalbyAgeforTIN(Nullable<int> intCurActiveYear, string strCurTIN, Nullable<int> intCurMeasureId, string strMeasure_num, Nullable<bool> blnGPRO)
        {
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var intCurMeasureIdParameter = intCurMeasureId.HasValue ?
                new ObjectParameter("intCurMeasureId", intCurMeasureId) :
                new ObjectParameter("intCurMeasureId", typeof(int));
    
            var strMeasure_numParameter = strMeasure_num != null ?
                new ObjectParameter("strMeasure_num", strMeasure_num) :
                new ObjectParameter("strMeasure_num", typeof(string));
    
            var blnGPROParameter = blnGPRO.HasValue ?
                new ObjectParameter("blnGPRO", blnGPRO) :
                new ObjectParameter("blnGPRO", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_StratumCalbyAgeforTIN", intCurActiveYearParameter, strCurTINParameter, intCurMeasureIdParameter, strMeasure_numParameter, blnGPROParameter);
        }
    
        public virtual int spReCalculate_StratumCalbyAgeforTIN90Days(Nullable<int> intCurActiveYear, string strCurTIN, Nullable<int> intCurMeasureId, string strMeasure_num, Nullable<bool> blnGPRO)
        {
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var intCurMeasureIdParameter = intCurMeasureId.HasValue ?
                new ObjectParameter("intCurMeasureId", intCurMeasureId) :
                new ObjectParameter("intCurMeasureId", typeof(int));
    
            var strMeasure_numParameter = strMeasure_num != null ?
                new ObjectParameter("strMeasure_num", strMeasure_num) :
                new ObjectParameter("strMeasure_num", typeof(string));
    
            var blnGPROParameter = blnGPRO.HasValue ?
                new ObjectParameter("blnGPRO", blnGPRO) :
                new ObjectParameter("blnGPRO", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculate_StratumCalbyAgeforTIN90Days", intCurActiveYearParameter, strCurTINParameter, intCurMeasureIdParameter, strMeasure_numParameter, blnGPROParameter);
        }
    
        public virtual int spReCalculatePerfomanceRateFor90Days(Nullable<int> intYear, string strPhysicianNPI)
        {
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var strPhysicianNPIParameter = strPhysicianNPI != null ?
                new ObjectParameter("strPhysicianNPI", strPhysicianNPI) :
                new ObjectParameter("strPhysicianNPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculatePerfomanceRateFor90Days", intYearParameter, strPhysicianNPIParameter);
        }
    
        public virtual int spReCalculatePerfomanceRateFor90DaysandMeasureID(string strCurMeasure_num, string strCurTIN, Nullable<int> intCurActiveYear, Nullable<bool> is_90Days, string strCurNPI)
        {
            var strCurMeasure_numParameter = strCurMeasure_num != null ?
                new ObjectParameter("strCurMeasure_num", strCurMeasure_num) :
                new ObjectParameter("strCurMeasure_num", typeof(string));
    
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var is_90DaysParameter = is_90Days.HasValue ?
                new ObjectParameter("Is_90Days", is_90Days) :
                new ObjectParameter("Is_90Days", typeof(bool));
    
            var strCurNPIParameter = strCurNPI != null ?
                new ObjectParameter("strCurNPI", strCurNPI) :
                new ObjectParameter("strCurNPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculatePerfomanceRateFor90DaysandMeasureID", strCurMeasure_numParameter, strCurTINParameter, intCurActiveYearParameter, is_90DaysParameter, strCurNPIParameter);
        }
    
        public virtual int spReCalculatePerfomanceRateForYear(Nullable<int> intYear, string strPhysicianNPI, string strTIN)
        {
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var strPhysicianNPIParameter = strPhysicianNPI != null ?
                new ObjectParameter("strPhysicianNPI", strPhysicianNPI) :
                new ObjectParameter("strPhysicianNPI", typeof(string));
    
            var strTINParameter = strTIN != null ?
                new ObjectParameter("strTIN", strTIN) :
                new ObjectParameter("strTIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculatePerfomanceRateForYear", intYearParameter, strPhysicianNPIParameter, strTINParameter);
        }
    
        public virtual int spReCalculatePerfomanceRateForYearandMeasureID(string strCurMeasure_num, string strCurTIN, Nullable<int> intCurActiveYear, Nullable<bool> is_90Days, string strCurNPI)
        {
            var strCurMeasure_numParameter = strCurMeasure_num != null ?
                new ObjectParameter("strCurMeasure_num", strCurMeasure_num) :
                new ObjectParameter("strCurMeasure_num", typeof(string));
    
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var is_90DaysParameter = is_90Days.HasValue ?
                new ObjectParameter("Is_90Days", is_90Days) :
                new ObjectParameter("Is_90Days", typeof(bool));
    
            var strCurNPIParameter = strCurNPI != null ?
                new ObjectParameter("strCurNPI", strCurNPI) :
                new ObjectParameter("strCurNPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculatePerfomanceRateForYearandMeasureID", strCurMeasure_numParameter, strCurTINParameter, intCurActiveYearParameter, is_90DaysParameter, strCurNPIParameter);
        }
    
        public virtual int spReCalculateTINperformanceRateFor90Days(Nullable<int> intYear, string strTIN)
        {
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var strTINParameter = strTIN != null ?
                new ObjectParameter("strTIN", strTIN) :
                new ObjectParameter("strTIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculateTINperformanceRateFor90Days", intYearParameter, strTINParameter);
        }
    
        public virtual int spReCalculateTINperformanceRateFor90DaysandMeasureID(string strCurMeasure_num, Nullable<int> intCurActiveYear, string strCurTIN, Nullable<bool> is_90Days)
        {
            var strCurMeasure_numParameter = strCurMeasure_num != null ?
                new ObjectParameter("strCurMeasure_num", strCurMeasure_num) :
                new ObjectParameter("strCurMeasure_num", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var is_90DaysParameter = is_90Days.HasValue ?
                new ObjectParameter("Is_90Days", is_90Days) :
                new ObjectParameter("Is_90Days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculateTINperformanceRateFor90DaysandMeasureID", strCurMeasure_numParameter, intCurActiveYearParameter, strCurTINParameter, is_90DaysParameter);
        }
    
        public virtual int spReCalculateTINperformanceRateForYear(Nullable<int> intYear, string strTIN)
        {
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var strTINParameter = strTIN != null ?
                new ObjectParameter("strTIN", strTIN) :
                new ObjectParameter("strTIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculateTINperformanceRateForYear", intYearParameter, strTINParameter);
        }
    
        public virtual int spReCalculateTINperformanceRateForYear_NewSP(Nullable<int> intYear, string strTIN)
        {
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var strTINParameter = strTIN != null ?
                new ObjectParameter("strTIN", strTIN) :
                new ObjectParameter("strTIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculateTINperformanceRateForYear_NewSP", intYearParameter, strTINParameter);
        }
    
        public virtual int spReCalculateTINperformanceRateForYearandMeasureID(string strCurMeasure_num, Nullable<int> intCurActiveYear, string strCurTIN, Nullable<bool> is_90Days)
        {
            var strCurMeasure_numParameter = strCurMeasure_num != null ?
                new ObjectParameter("strCurMeasure_num", strCurMeasure_num) :
                new ObjectParameter("strCurMeasure_num", typeof(string));
    
            var intCurActiveYearParameter = intCurActiveYear.HasValue ?
                new ObjectParameter("intCurActiveYear", intCurActiveYear) :
                new ObjectParameter("intCurActiveYear", typeof(int));
    
            var strCurTINParameter = strCurTIN != null ?
                new ObjectParameter("strCurTIN", strCurTIN) :
                new ObjectParameter("strCurTIN", typeof(string));
    
            var is_90DaysParameter = is_90Days.HasValue ?
                new ObjectParameter("Is_90Days", is_90Days) :
                new ObjectParameter("Is_90Days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReCalculateTINperformanceRateForYearandMeasureID", strCurMeasure_numParameter, intCurActiveYearParameter, strCurTINParameter, is_90DaysParameter);
        }
    
        public virtual ObjectResult<SPRecordEnteredPageGridDetails_Result> SPRecordEnteredPageGridDetails(Nullable<int> cMSYear, string npi, Nullable<int> pageNo, Nullable<int> pageLimit, Nullable<bool> iSASC, string sortColumn, string sortDirection)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var npiParameter = npi != null ?
                new ObjectParameter("npi", npi) :
                new ObjectParameter("npi", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageLimitParameter = pageLimit.HasValue ?
                new ObjectParameter("PageLimit", pageLimit) :
                new ObjectParameter("PageLimit", typeof(int));
    
            var iSASCParameter = iSASC.HasValue ?
                new ObjectParameter("ISASC", iSASC) :
                new ObjectParameter("ISASC", typeof(bool));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPRecordEnteredPageGridDetails_Result>("SPRecordEnteredPageGridDetails", cMSYearParameter, npiParameter, pageNoParameter, pageLimitParameter, iSASCParameter, sortColumnParameter, sortDirectionParameter);
        }
    
        public virtual int spRegistrationStatusForFaciilty()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRegistrationStatusForFaciilty");
        }
    
        public virtual int spRejectedData(Nullable<int> dataSourceId, Nullable<int> createdBy, Nullable<int> fileId)
        {
            var dataSourceIdParameter = dataSourceId.HasValue ?
                new ObjectParameter("DataSourceId", dataSourceId) :
                new ObjectParameter("DataSourceId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRejectedData", dataSourceIdParameter, createdByParameter, fileIdParameter);
        }
    
        public virtual int spRejectedDataNew(Nullable<int> dataSourceId, Nullable<int> createdBy, Nullable<int> fileId)
        {
            var dataSourceIdParameter = dataSourceId.HasValue ?
                new ObjectParameter("DataSourceId", dataSourceId) :
                new ObjectParameter("DataSourceId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRejectedDataNew", dataSourceIdParameter, createdByParameter, fileIdParameter);
        }
    
        public virtual int spRemoveDuplicate_Users()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRemoveDuplicate_Users");
        }
    
        public virtual int spRemoveDuplicateExams(Nullable<int> intYear)
        {
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRemoveDuplicateExams", intYearParameter);
        }
    
        public virtual int spRemoveDuplicateExams_NoExamUniqueID(Nullable<int> intYear)
        {
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRemoveDuplicateExams_NoExamUniqueID", intYearParameter);
        }
    
        public virtual int SPRepopulate_AttestationTINNPIs_ForJIRA_659()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPRepopulate_AttestationTINNPIs_ForJIRA_659");
        }
    
        public virtual int SPSaveAllMeasureData_notusing(string tIN, string nPI, Nullable<bool> iS_GPRO, Nullable<bool> iS_90Days, Nullable<int> cMSYear, Nullable<int> userId)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var nPIParameter = nPI != null ?
                new ObjectParameter("NPI", nPI) :
                new ObjectParameter("NPI", typeof(string));
    
            var iS_GPROParameter = iS_GPRO.HasValue ?
                new ObjectParameter("IS_GPRO", iS_GPRO) :
                new ObjectParameter("IS_GPRO", typeof(bool));
    
            var iS_90DaysParameter = iS_90Days.HasValue ?
                new ObjectParameter("IS_90Days", iS_90Days) :
                new ObjectParameter("IS_90Days", typeof(bool));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPSaveAllMeasureData_notusing", tINParameter, nPIParameter, iS_GPROParameter, iS_90DaysParameter, cMSYearParameter, userIdParameter);
        }
    
        public virtual int SpSaveBlockListData(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSaveBlockListData", userIdParameter);
        }
    
        public virtual int SpSaveBlockMeasureListData(Nullable<int> userId, Nullable<int> cmsYear, Nullable<int> categoryId, string tin)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var tinParameter = tin != null ?
                new ObjectParameter("Tin", tin) :
                new ObjectParameter("Tin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSaveBlockMeasureListData", userIdParameter, cmsYearParameter, categoryIdParameter, tinParameter);
        }
    
        public virtual int spSelectedTINNPIRelatedIAMeasureDataForFullYear(Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSelectedTINNPIRelatedIAMeasureDataForFullYear", cMSYearParameter, isExportParameter);
        }
    
        public virtual int spSelectedTINNPIRelatedMeasureDataForFullYear(Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSelectedTINNPIRelatedMeasureDataForFullYear", cMSYearParameter, isExportParameter);
        }
    
        public virtual int spSelectedTinsRelatedIAMeasureDataForFullYear(Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSelectedTinsRelatedIAMeasureDataForFullYear", cMSYearParameter, isExportParameter);
        }
    
        public virtual int spSelectedTinsRelatedMeasureDataForFullYear(Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSelectedTinsRelatedMeasureDataForFullYear", cMSYearParameter, isExportParameter);
        }
    
        public virtual ObjectResult<spShowImportTables_Result> spShowImportTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spShowImportTables_Result>("spShowImportTables");
        }
    
        public virtual int SPTemp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPTemp");
        }
    
        public virtual ObjectResult<SPTestPK_Result> SPTestPK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPTestPK_Result>("SPTestPK");
        }
    
        public virtual ObjectResult<spTinFinalize_90DaysLock_Result> spTinFinalize_90DaysLock(Nullable<int> cMSYear, string facilityuseranme, Nullable<int> userId)
        {
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var facilityuseranmeParameter = facilityuseranme != null ?
                new ObjectParameter("facilityuseranme", facilityuseranme) :
                new ObjectParameter("facilityuseranme", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTinFinalize_90DaysLock_Result>("spTinFinalize_90DaysLock", cMSYearParameter, facilityuseranmeParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spTinLevelACIFinalizationValidation(string tIN, Nullable<int> cMSYear)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spTinLevelACIFinalizationValidation", tINParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spTinLevelIAFinalizationValidation(string tIN, Nullable<int> cMSYear)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spTinLevelIAFinalizationValidation", tINParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spTinLevelQMFinalizationValidation(string tIN, Nullable<int> cMSYear, Nullable<bool> is90days)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spTinLevelQMFinalizationValidation", tINParameter, cMSYearParameter, is90daysParameter);
        }
    
        public virtual ObjectResult<spTinMeasureRelatedMeasureDataFor90Days_Result> spTinMeasureRelatedMeasureDataFor90Days(Nullable<int> cmsyear, string tIN, string measureNum, Nullable<bool> is90days)
        {
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("cmsyear", cmsyear) :
                new ObjectParameter("cmsyear", typeof(int));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var measureNumParameter = measureNum != null ?
                new ObjectParameter("measureNum", measureNum) :
                new ObjectParameter("measureNum", typeof(string));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTinMeasureRelatedMeasureDataFor90Days_Result>("spTinMeasureRelatedMeasureDataFor90Days", cmsyearParameter, tINParameter, measureNumParameter, is90daysParameter);
        }
    
        public virtual ObjectResult<spTinMeasureRelatedMeasureDataForFullYear_Result> spTinMeasureRelatedMeasureDataForFullYear(Nullable<int> cmsyear, string tIN, string measureNum, Nullable<bool> is90days, Nullable<bool> isExport)
        {
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("cmsyear", cmsyear) :
                new ObjectParameter("cmsyear", typeof(int));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var measureNumParameter = measureNum != null ?
                new ObjectParameter("measureNum", measureNum) :
                new ObjectParameter("measureNum", typeof(string));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTinMeasureRelatedMeasureDataForFullYear_Result>("spTinMeasureRelatedMeasureDataForFullYear", cmsyearParameter, tINParameter, measureNumParameter, is90daysParameter, isExportParameter);
        }
    
        public virtual ObjectResult<spTinNpiFinalize_90DaysLock_Result> spTinNpiFinalize_90DaysLock(string tIN, Nullable<int> cMSYear, string facilityuseranme)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var facilityuseranmeParameter = facilityuseranme != null ?
                new ObjectParameter("facilityuseranme", facilityuseranme) :
                new ObjectParameter("facilityuseranme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTinNpiFinalize_90DaysLock_Result>("spTinNpiFinalize_90DaysLock", tINParameter, cMSYearParameter, facilityuseranmeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spTinNpiLevelFacilityACIFinalizationValidation(string tIN, string npi, Nullable<int> cMSYear, Nullable<bool> is90days)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spTinNpiLevelFacilityACIFinalizationValidation", tINParameter, npiParameter, cMSYearParameter, is90daysParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spTinNpiLevelFinalizationValidation(string tIN, string npi, Nullable<int> cMSYear, Nullable<bool> is90days)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spTinNpiLevelFinalizationValidation", tINParameter, npiParameter, cMSYearParameter, is90daysParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spTinNpiLevelIAFinalizationValidation(string tIN, string npi, Nullable<int> cMSYear)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spTinNpiLevelIAFinalizationValidation", tINParameter, npiParameter, cMSYearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spTinNpiLevelPhysicianACIFinalizationValidation(string tIN, string npi, Nullable<int> cMSYear, Nullable<bool> is90days)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spTinNpiLevelPhysicianACIFinalizationValidation", tINParameter, npiParameter, cMSYearParameter, is90daysParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spTinNpiLevelQMFinalizationValidation(string tIN, string npi, Nullable<int> cMSYear, Nullable<bool> is90days)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var npiParameter = npi != null ?
                new ObjectParameter("Npi", npi) :
                new ObjectParameter("Npi", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spTinNpiLevelQMFinalizationValidation", tINParameter, npiParameter, cMSYearParameter, is90daysParameter);
        }
    
        public virtual ObjectResult<spTinRelatedMeasureData_Result> spTinRelatedMeasureData(Nullable<int> cmsyear, string tIN, Nullable<bool> isExport, Nullable<bool> is90days)
        {
            var cmsyearParameter = cmsyear.HasValue ?
                new ObjectParameter("cmsyear", cmsyear) :
                new ObjectParameter("cmsyear", typeof(int));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            var is90daysParameter = is90days.HasValue ?
                new ObjectParameter("is90days", is90days) :
                new ObjectParameter("is90days", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTinRelatedMeasureData_Result>("spTinRelatedMeasureData", cmsyearParameter, tINParameter, isExportParameter, is90daysParameter);
        }
    
        public virtual ObjectResult<spTinRelatedMeasureDataFor90days_Result> spTinRelatedMeasureDataFor90days(string tIN, Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTinRelatedMeasureDataFor90days_Result>("spTinRelatedMeasureDataFor90days", tINParameter, cMSYearParameter, isExportParameter);
        }
    
        public virtual ObjectResult<spTinRelatedMeasureDataForFullYear_Result> spTinRelatedMeasureDataForFullYear(string tIN, Nullable<int> cMSYear, Nullable<bool> isExport)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var isExportParameter = isExport.HasValue ?
                new ObjectParameter("isExport", isExport) :
                new ObjectParameter("isExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTinRelatedMeasureDataForFullYear_Result>("spTinRelatedMeasureDataForFullYear", tINParameter, cMSYearParameter, isExportParameter);
        }
    
        public virtual int spTruncateImportFilesDataInTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTruncateImportFilesDataInTables");
        }
    
        public virtual int spTruncateImportFilesTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTruncateImportFilesTables");
        }
    
        public virtual int spTruncateImportTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTruncateImportTables");
        }
    
        public virtual int spTruncateTransTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTruncateTransTables");
        }
    
        public virtual ObjectResult<Nullable<int>> spUpdate_GPROtoNonGPRO_ViceVersa(string tIN, Nullable<bool> iS_GPRO, Nullable<int> cMSYear, string userid, ObjectParameter errorCode)
        {
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var iS_GPROParameter = iS_GPRO.HasValue ?
                new ObjectParameter("IS_GPRO", iS_GPRO) :
                new ObjectParameter("IS_GPRO", typeof(bool));
    
            var cMSYearParameter = cMSYear.HasValue ?
                new ObjectParameter("CMSYear", cMSYear) :
                new ObjectParameter("CMSYear", typeof(int));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spUpdate_GPROtoNonGPRO_ViceVersa", tINParameter, iS_GPROParameter, cMSYearParameter, useridParameter, errorCode);
        }
    
        public virtual ObjectResult<spUpdateExamData_Result> spUpdateExamData(string partnerId, string physicianNPI, string examTIN, string patient_Id, string decryptPatient_Id, Nullable<decimal> patient_Age, string patient_Gender, string measure_Num, string procedure_Code, Nullable<bool> isEncrypt, Nullable<short> patient_Medicare_Advantage, Nullable<short> patient_Medicare_Beneficiary, Nullable<System.DateTime> exam_Date, Nullable<System.DateTime> last_Modified_Date, string last_Modified_By, Nullable<int> cMS_Submission_Year, string exam_Unique_ID, Nullable<int> dataSource_Id, string file_Name, string criteria, string denom_Diag_Code, string numerator_Code)
        {
            var partnerIdParameter = partnerId != null ?
                new ObjectParameter("PartnerId", partnerId) :
                new ObjectParameter("PartnerId", typeof(string));
    
            var physicianNPIParameter = physicianNPI != null ?
                new ObjectParameter("PhysicianNPI", physicianNPI) :
                new ObjectParameter("PhysicianNPI", typeof(string));
    
            var examTINParameter = examTIN != null ?
                new ObjectParameter("ExamTIN", examTIN) :
                new ObjectParameter("ExamTIN", typeof(string));
    
            var patient_IdParameter = patient_Id != null ?
                new ObjectParameter("Patient_Id", patient_Id) :
                new ObjectParameter("Patient_Id", typeof(string));
    
            var decryptPatient_IdParameter = decryptPatient_Id != null ?
                new ObjectParameter("DecryptPatient_Id", decryptPatient_Id) :
                new ObjectParameter("DecryptPatient_Id", typeof(string));
    
            var patient_AgeParameter = patient_Age.HasValue ?
                new ObjectParameter("Patient_Age", patient_Age) :
                new ObjectParameter("Patient_Age", typeof(decimal));
    
            var patient_GenderParameter = patient_Gender != null ?
                new ObjectParameter("Patient_Gender", patient_Gender) :
                new ObjectParameter("Patient_Gender", typeof(string));
    
            var measure_NumParameter = measure_Num != null ?
                new ObjectParameter("Measure_Num", measure_Num) :
                new ObjectParameter("Measure_Num", typeof(string));
    
            var procedure_CodeParameter = procedure_Code != null ?
                new ObjectParameter("Procedure_Code", procedure_Code) :
                new ObjectParameter("Procedure_Code", typeof(string));
    
            var isEncryptParameter = isEncrypt.HasValue ?
                new ObjectParameter("IsEncrypt", isEncrypt) :
                new ObjectParameter("IsEncrypt", typeof(bool));
    
            var patient_Medicare_AdvantageParameter = patient_Medicare_Advantage.HasValue ?
                new ObjectParameter("Patient_Medicare_Advantage", patient_Medicare_Advantage) :
                new ObjectParameter("Patient_Medicare_Advantage", typeof(short));
    
            var patient_Medicare_BeneficiaryParameter = patient_Medicare_Beneficiary.HasValue ?
                new ObjectParameter("Patient_Medicare_Beneficiary", patient_Medicare_Beneficiary) :
                new ObjectParameter("Patient_Medicare_Beneficiary", typeof(short));
    
            var exam_DateParameter = exam_Date.HasValue ?
                new ObjectParameter("Exam_Date", exam_Date) :
                new ObjectParameter("Exam_Date", typeof(System.DateTime));
    
            var last_Modified_DateParameter = last_Modified_Date.HasValue ?
                new ObjectParameter("Last_Modified_Date", last_Modified_Date) :
                new ObjectParameter("Last_Modified_Date", typeof(System.DateTime));
    
            var last_Modified_ByParameter = last_Modified_By != null ?
                new ObjectParameter("Last_Modified_By", last_Modified_By) :
                new ObjectParameter("Last_Modified_By", typeof(string));
    
            var cMS_Submission_YearParameter = cMS_Submission_Year.HasValue ?
                new ObjectParameter("CMS_Submission_Year", cMS_Submission_Year) :
                new ObjectParameter("CMS_Submission_Year", typeof(int));
    
            var exam_Unique_IDParameter = exam_Unique_ID != null ?
                new ObjectParameter("Exam_Unique_ID", exam_Unique_ID) :
                new ObjectParameter("Exam_Unique_ID", typeof(string));
    
            var dataSource_IdParameter = dataSource_Id.HasValue ?
                new ObjectParameter("DataSource_Id", dataSource_Id) :
                new ObjectParameter("DataSource_Id", typeof(int));
    
            var file_NameParameter = file_Name != null ?
                new ObjectParameter("File_Name", file_Name) :
                new ObjectParameter("File_Name", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var denom_Diag_CodeParameter = denom_Diag_Code != null ?
                new ObjectParameter("Denom_Diag_Code", denom_Diag_Code) :
                new ObjectParameter("Denom_Diag_Code", typeof(string));
    
            var numerator_CodeParameter = numerator_Code != null ?
                new ObjectParameter("Numerator_Code", numerator_Code) :
                new ObjectParameter("Numerator_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdateExamData_Result>("spUpdateExamData", partnerIdParameter, physicianNPIParameter, examTINParameter, patient_IdParameter, decryptPatient_IdParameter, patient_AgeParameter, patient_GenderParameter, measure_NumParameter, procedure_CodeParameter, isEncryptParameter, patient_Medicare_AdvantageParameter, patient_Medicare_BeneficiaryParameter, exam_DateParameter, last_Modified_DateParameter, last_Modified_ByParameter, cMS_Submission_YearParameter, exam_Unique_IDParameter, dataSource_IdParameter, file_NameParameter, criteriaParameter, denom_Diag_CodeParameter, numerator_CodeParameter);
        }
    
        public virtual int SpUpdateHitrustSiteActiveStatus(Nullable<int> userid, Nullable<bool> siteActive, string category)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var siteActiveParameter = siteActive.HasValue ?
                new ObjectParameter("SiteActive", siteActive) :
                new ObjectParameter("SiteActive", typeof(bool));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateHitrustSiteActiveStatus", useridParameter, siteActiveParameter, categoryParameter);
        }
    
        public virtual ObjectResult<spUpdateMeasureData_Result> spUpdateMeasureData(Nullable<int> exam_Id, string measure_Num, string denominator_proc_code, string denominator_Diag_code, Nullable<System.DateTime> last_Mod_Date, string last_Mod_By, Nullable<short> numerator_response_value, Nullable<int> status, Nullable<int> cMS_Submission_Year, string criteria, string numerator_response_code)
        {
            var exam_IdParameter = exam_Id.HasValue ?
                new ObjectParameter("Exam_Id", exam_Id) :
                new ObjectParameter("Exam_Id", typeof(int));
    
            var measure_NumParameter = measure_Num != null ?
                new ObjectParameter("Measure_Num", measure_Num) :
                new ObjectParameter("Measure_Num", typeof(string));
    
            var denominator_proc_codeParameter = denominator_proc_code != null ?
                new ObjectParameter("Denominator_proc_code", denominator_proc_code) :
                new ObjectParameter("Denominator_proc_code", typeof(string));
    
            var denominator_Diag_codeParameter = denominator_Diag_code != null ?
                new ObjectParameter("Denominator_Diag_code", denominator_Diag_code) :
                new ObjectParameter("Denominator_Diag_code", typeof(string));
    
            var last_Mod_DateParameter = last_Mod_Date.HasValue ?
                new ObjectParameter("Last_Mod_Date", last_Mod_Date) :
                new ObjectParameter("Last_Mod_Date", typeof(System.DateTime));
    
            var last_Mod_ByParameter = last_Mod_By != null ?
                new ObjectParameter("Last_Mod_By", last_Mod_By) :
                new ObjectParameter("Last_Mod_By", typeof(string));
    
            var numerator_response_valueParameter = numerator_response_value.HasValue ?
                new ObjectParameter("Numerator_response_value", numerator_response_value) :
                new ObjectParameter("Numerator_response_value", typeof(short));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var cMS_Submission_YearParameter = cMS_Submission_Year.HasValue ?
                new ObjectParameter("CMS_Submission_Year", cMS_Submission_Year) :
                new ObjectParameter("CMS_Submission_Year", typeof(int));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var numerator_response_codeParameter = numerator_response_code != null ?
                new ObjectParameter("Numerator_response_code", numerator_response_code) :
                new ObjectParameter("Numerator_response_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdateMeasureData_Result>("spUpdateMeasureData", exam_IdParameter, measure_NumParameter, denominator_proc_codeParameter, denominator_Diag_codeParameter, last_Mod_DateParameter, last_Mod_ByParameter, numerator_response_valueParameter, statusParameter, cMS_Submission_YearParameter, criteriaParameter, numerator_response_codeParameter);
        }
    
        public virtual int SpUpdateMeasureRulesConfigPart1(Nullable<int> cmsYear, Nullable<int> categoryId, Nullable<int> ruleId)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var ruleIdParameter = ruleId.HasValue ?
                new ObjectParameter("RuleId", ruleId) :
                new ObjectParameter("RuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateMeasureRulesConfigPart1", cmsYearParameter, categoryIdParameter, ruleIdParameter);
        }
    
        public virtual int SpUpdateMeasureRulesConfigPart4(Nullable<int> cmsYear, Nullable<int> categoryId, Nullable<int> ruleId)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var ruleIdParameter = ruleId.HasValue ?
                new ObjectParameter("RuleId", ruleId) :
                new ObjectParameter("RuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateMeasureRulesConfigPart4", cmsYearParameter, categoryIdParameter, ruleIdParameter);
        }
    
        public virtual int SpUpdateMeasureRulesConfigPart5(Nullable<int> cmsYear, Nullable<int> categoryId, Nullable<int> ruleId)
        {
            var cmsYearParameter = cmsYear.HasValue ?
                new ObjectParameter("CmsYear", cmsYear) :
                new ObjectParameter("CmsYear", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var ruleIdParameter = ruleId.HasValue ?
                new ObjectParameter("RuleId", ruleId) :
                new ObjectParameter("RuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateMeasureRulesConfigPart5", cmsYearParameter, categoryIdParameter, ruleIdParameter);
        }
    
        public virtual int SpUpdateNumertorValueFromTblFile_Rawdata(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateNumertorValueFromTblFile_Rawdata", startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spValidateImportExam(Nullable<int> examsID, string transactionID, string parentNode, string facilityID)
        {
            var examsIDParameter = examsID.HasValue ?
                new ObjectParameter("ExamsID", examsID) :
                new ObjectParameter("ExamsID", typeof(int));
    
            var transactionIDParameter = transactionID != null ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(string));
    
            var parentNodeParameter = parentNode != null ?
                new ObjectParameter("ParentNode", parentNode) :
                new ObjectParameter("ParentNode", typeof(string));
    
            var facilityIDParameter = facilityID != null ?
                new ObjectParameter("FacilityID", facilityID) :
                new ObjectParameter("FacilityID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spValidateImportExam", examsIDParameter, transactionIDParameter, parentNodeParameter, facilityIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spValidateImportExam_ByTwoActiveYears(Nullable<int> examsID, string transactionID, string parentNode, string facilityID)
        {
            var examsIDParameter = examsID.HasValue ?
                new ObjectParameter("ExamsID", examsID) :
                new ObjectParameter("ExamsID", typeof(int));
    
            var transactionIDParameter = transactionID != null ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(string));
    
            var parentNodeParameter = parentNode != null ?
                new ObjectParameter("ParentNode", parentNode) :
                new ObjectParameter("ParentNode", typeof(string));
    
            var facilityIDParameter = facilityID != null ?
                new ObjectParameter("FacilityID", facilityID) :
                new ObjectParameter("FacilityID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spValidateImportExam_ByTwoActiveYears", examsIDParameter, transactionIDParameter, parentNodeParameter, facilityIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spValidateImportExam_Nrdr13x(Nullable<int> examsID, string transactionID, string parentNode, string facilityID)
        {
            var examsIDParameter = examsID.HasValue ?
                new ObjectParameter("ExamsID", examsID) :
                new ObjectParameter("ExamsID", typeof(int));
    
            var transactionIDParameter = transactionID != null ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(string));
    
            var parentNodeParameter = parentNode != null ?
                new ObjectParameter("ParentNode", parentNode) :
                new ObjectParameter("ParentNode", typeof(string));
    
            var facilityIDParameter = facilityID != null ?
                new ObjectParameter("FacilityID", facilityID) :
                new ObjectParameter("FacilityID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spValidateImportExam_Nrdr13x", examsIDParameter, transactionIDParameter, parentNodeParameter, facilityIDParameter);
        }
    
        public virtual int spValidateImportExamMeasureData(Nullable<int> examID, string parentNode)
        {
            var examIDParameter = examID.HasValue ?
                new ObjectParameter("ExamID", examID) :
                new ObjectParameter("ExamID", typeof(int));
    
            var parentNodeParameter = parentNode != null ?
                new ObjectParameter("ParentNode", parentNode) :
                new ObjectParameter("ParentNode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidateImportExamMeasureData", examIDParameter, parentNodeParameter);
        }
    
        public virtual int spValidateImportExamMeasureData_BYTwoActiveYears(Nullable<int> examID, string parentNode)
        {
            var examIDParameter = examID.HasValue ?
                new ObjectParameter("ExamID", examID) :
                new ObjectParameter("ExamID", typeof(int));
    
            var parentNodeParameter = parentNode != null ?
                new ObjectParameter("ParentNode", parentNode) :
                new ObjectParameter("ParentNode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidateImportExamMeasureData_BYTwoActiveYears", examIDParameter, parentNodeParameter);
        }
    
        public virtual int spValidateImportExamMeasureDataExtension(Nullable<int> measure_Data_ID)
        {
            var measure_Data_IDParameter = measure_Data_ID.HasValue ?
                new ObjectParameter("Measure_Data_ID", measure_Data_ID) :
                new ObjectParameter("Measure_Data_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidateImportExamMeasureDataExtension", measure_Data_IDParameter);
        }
    
        public virtual int spValidateImportExams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidateImportExams");
        }
    
        public virtual int spValidateImportExams_NPI_FacilityID_TEMPTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidateImportExams_NPI_FacilityID_TEMPTable");
        }
    
        public virtual ObjectResult<test_List_orders_2_Result> test_List_orders_2(Nullable<System.DateTime> fromdate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_List_orders_2_Result>("test_List_orders_2", fromdateParameter);
        }
    
        public virtual ObjectResult<test_List_orders_3_Result> test_List_orders_3(Nullable<System.DateTime> fromdate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_List_orders_3_Result>("test_List_orders_3", fromdateParameter);
        }
    
        public virtual ObjectResult<test1_Result> test1(string name, Nullable<int> val)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var valParameter = val.HasValue ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test1_Result>("test1", nameParameter, valParameter);
        }
    
        public virtual ObjectResult<test2_Result> test2(string nam)
        {
            var namParameter = nam != null ?
                new ObjectParameter("nam", nam) :
                new ObjectParameter("nam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test2_Result>("test2", namParameter);
        }
    
        public virtual ObjectResult<string> XMLFilesGenerate_helpScript_QM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("XMLFilesGenerate_helpScript_QM");
        }
    
        public virtual int zzz_obscelete_sp_getFacility_GproTIN(string facilityID)
        {
            var facilityIDParameter = facilityID != null ?
                new ObjectParameter("FacilityID", facilityID) :
                new ObjectParameter("FacilityID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("zzz_obscelete_sp_getFacility_GproTIN", facilityIDParameter);
        }
    }
}
